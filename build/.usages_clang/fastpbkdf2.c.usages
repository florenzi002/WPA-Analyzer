22 serialization::archive 15 0 0 0 0 43 /home/florenzi/Documenti/juci_ws/wpa_decode 49 /home/florenzi/Documenti/juci_ws/wpa_decode/build 0 0 2321 0 0 0 514 /*
 * fast-pbkdf2 - Optimal PBKDF2-HMAC calculation
 * Written in 2015 by Joseph Birr-Pixton <jpixton@gmail.com>
 *
 * To the extent possible under law, the author(s) have dedicated all
 * copyright and related and neighboring rights to this software to the
 * public domain worldwide. This software is distributed without any
 * warranty.
 *
 * You should have received a copy of the CC0 Public Domain Dedication
 * along with this software. If not, see
 * <http://creativecommons.org/publicdomain/zero/1.0/>.
 */ 1 1 13 4 18446744073709551615 1 # 15 1 15 2 18446744073709551615 7 include 15 2 15 9 18446744073709551615 14 "fastpbkdf2.h" 15 10 15 24 18446744073709551615 1 # 17 1 17 2 18446744073709551615 7 include 17 2 17 9 18446744073709551615 1 < 17 10 17 11 18446744073709551615 6 assert 17 11 17 17 18446744073709551615 1 . 17 17 17 18 18446744073709551615 1 h 17 18 17 19 18446744073709551615 1 > 17 19 17 20 18446744073709551615 1 # 18 1 18 2 18446744073709551615 7 include 18 2 18 9 18446744073709551615 1 < 18 10 18 11 18446744073709551615 6 string 18 11 18 17 18446744073709551615 1 . 18 17 18 18 18446744073709551615 1 h 18 18 18 19 18446744073709551615 1 > 18 19 18 20 18446744073709551615 1 # 19 1 19 2 18446744073709551615 2 if 19 2 19 4 18446744073709551615 7 defined 19 5 19 12 18446744073709551615 1 ( 19 12 19 13 18446744073709551615 8 __GNUC__ 19 13 19 21 18446744073709551615 1 ) 19 21 19 22 18446744073709551615 1 # 20 1 20 2 18446744073709551615 7 include 20 2 20 9 18446744073709551615 1 < 20 10 20 11 18446744073709551615 6 endian 20 11 20 17 18446744073709551615 1 . 20 17 20 18 18446744073709551615 1 h 20 18 20 19 18446744073709551615 1 > 20 19 20 20 18446744073709551615 1 # 21 1 21 2 18446744073709551615 5 endif 21 2 21 7 18446744073709551615 1 # 23 1 23 2 18446744073709551615 7 include 23 2 23 9 18446744073709551615 1 < 23 10 23 11 18446744073709551615 7 openssl 23 11 23 18 18446744073709551615 1 / 23 18 23 19 18446744073709551615 3 sha 23 19 23 22 18446744073709551615 1 . 23 22 23 23 18446744073709551615 1 h 23 23 23 24 18446744073709551615 1 > 23 24 23 25 18446744073709551615 38 /* --- MSVC doesn't support C99 --- */ 25 1 25 39 18446744073709551615 1 # 26 1 26 2 18446744073709551615 5 ifdef 26 2 26 7 18446744073709551615 8 _MSC_VER 26 8 26 16 18446744073709551615 1 # 27 1 27 2 18446744073709551615 6 define 27 2 27 8 18446744073709551615 8 restrict 27 9 27 17 18446744073709551615 1 # 28 1 28 2 18446744073709551615 6 define 28 2 28 8 18446744073709551615 7 _Pragma 28 9 28 16 18446744073709551615 8 __pragma 28 17 28 25 18446744073709551615 1 # 29 1 29 2 18446744073709551615 5 endif 29 2 29 7 18446744073709551615 34 /* --- Common useful things --- */ 31 1 31 35 18446744073709551615 1 # 32 1 32 2 18446744073709551615 6 define 32 2 32 8 18446744073709551615 3 MIN 32 9 32 12 18446744073709551615 1 ( 32 12 32 13 18446744073709551615 1 a 32 13 32 14 18446744073709551615 1 , 32 14 32 15 18446744073709551615 1 b 32 16 32 17 18446744073709551615 1 ) 32 17 32 18 18446744073709551615 1 ( 32 19 32 20 18446744073709551615 1 ( 32 20 32 21 18446744073709551615 1 a 32 21 32 22 18446744073709551615 1 ) 32 22 32 23 18446744073709551615 1 > 32 24 32 25 18446744073709551615 1 ( 32 26 32 27 18446744073709551615 1 b 32 27 32 28 18446744073709551615 1 ) 32 28 32 29 18446744073709551615 1 ) 32 29 32 30 18446744073709551615 1 ? 32 31 32 32 18446744073709551615 1 ( 32 33 32 34 18446744073709551615 1 b 32 34 32 35 18446744073709551615 1 ) 32 35 32 36 18446744073709551615 1 : 32 37 32 38 18446744073709551615 1 ( 32 39 32 40 18446744073709551615 1 a 32 40 32 41 18446744073709551615 1 ) 32 41 32 42 18446744073709551615 6 static 34 1 34 7 18446744073709551615 6 inline 34 8 34 14 18446744073709551615 4 void 34 15 34 19 18446744073709551615 10 write32_be 34 20 34 30 0 1 ( 34 30 34 31 0 8 uint32_t 34 31 34 39 1 1 n 34 40 34 41 2 1 , 34 41 34 42 0 7 uint8_t 34 43 34 50 3 3 out 34 51 34 54 4 1 [ 34 54 34 55 18446744073709551615 1 4 34 55 34 56 18446744073709551615 1 ] 34 56 34 57 18446744073709551615 1 ) 34 57 34 58 0 1 { 35 1 35 2 18446744073709551615 1 # 36 1 36 2 18446744073709551615 2 if 36 2 36 4 18446744073709551615 7 defined 36 5 36 12 18446744073709551615 1 ( 36 12 36 13 18446744073709551615 8 __GNUC__ 36 13 36 21 18446744073709551615 1 ) 36 21 36 22 18446744073709551615 2 && 36 23 36 25 18446744073709551615 8 __GNUC__ 36 26 36 34 18446744073709551615 2 >= 36 35 36 37 18446744073709551615 1 4 36 38 36 39 18446744073709551615 2 && 36 40 36 42 18446744073709551615 12 __BYTE_ORDER 36 43 36 55 18446744073709551615 2 == 36 56 36 58 18446744073709551615 15 __LITTLE_ENDIAN 36 59 36 74 18446744073709551615 1 * 37 3 37 4 18446744073709551615 1 ( 37 4 37 5 18446744073709551615 8 uint32_t 37 5 37 13 1 1 * 37 14 37 15 18446744073709551615 1 ) 37 15 37 16 18446744073709551615 1 ( 37 16 37 17 18446744073709551615 3 out 37 17 37 20 4 1 ) 37 20 37 21 18446744073709551615 1 = 37 22 37 23 18446744073709551615 17 __builtin_bswap32 37 24 37 41 5 1 ( 37 41 37 42 5 1 n 37 42 37 43 2 1 ) 37 43 37 44 5 1 ; 37 44 37 45 18446744073709551615 1 # 38 1 38 2 18446744073709551615 4 else 38 2 38 6 18446744073709551615 3 out 39 3 39 6 18446744073709551615 1 [ 39 6 39 7 18446744073709551615 1 0 39 7 39 8 18446744073709551615 1 ] 39 8 39 9 18446744073709551615 1 = 39 10 39 11 18446744073709551615 1 ( 39 12 39 13 18446744073709551615 1 n 39 13 39 14 18446744073709551615 2 >> 39 15 39 17 18446744073709551615 2 24 39 18 39 20 18446744073709551615 1 ) 39 20 39 21 18446744073709551615 1 & 39 22 39 23 18446744073709551615 4 0xff 39 24 39 28 18446744073709551615 1 ; 39 28 39 29 18446744073709551615 3 out 40 3 40 6 18446744073709551615 1 [ 40 6 40 7 18446744073709551615 1 1 40 7 40 8 18446744073709551615 1 ] 40 8 40 9 18446744073709551615 1 = 40 10 40 11 18446744073709551615 1 ( 40 12 40 13 18446744073709551615 1 n 40 13 40 14 18446744073709551615 2 >> 40 15 40 17 18446744073709551615 2 16 40 18 40 20 18446744073709551615 1 ) 40 20 40 21 18446744073709551615 1 & 40 22 40 23 18446744073709551615 4 0xff 40 24 40 28 18446744073709551615 1 ; 40 28 40 29 18446744073709551615 3 out 41 3 41 6 18446744073709551615 1 [ 41 6 41 7 18446744073709551615 1 2 41 7 41 8 18446744073709551615 1 ] 41 8 41 9 18446744073709551615 1 = 41 10 41 11 18446744073709551615 1 ( 41 12 41 13 18446744073709551615 1 n 41 13 41 14 18446744073709551615 2 >> 41 15 41 17 18446744073709551615 1 8 41 18 41 19 18446744073709551615 1 ) 41 19 41 20 18446744073709551615 1 & 41 21 41 22 18446744073709551615 4 0xff 41 23 41 27 18446744073709551615 1 ; 41 27 41 28 18446744073709551615 3 out 42 3 42 6 18446744073709551615 1 [ 42 6 42 7 18446744073709551615 1 3 42 7 42 8 18446744073709551615 1 ] 42 8 42 9 18446744073709551615 1 = 42 10 42 11 18446744073709551615 1 n 42 12 42 13 18446744073709551615 1 & 42 14 42 15 18446744073709551615 4 0xff 42 16 42 20 18446744073709551615 1 ; 42 20 42 21 18446744073709551615 1 # 43 1 43 2 18446744073709551615 5 endif 43 2 43 7 18446744073709551615 1 } 44 1 44 2 18446744073709551615 6 static 46 1 46 7 18446744073709551615 6 inline 46 8 46 14 18446744073709551615 4 void 46 15 46 19 18446744073709551615 10 write64_be 46 20 46 30 6 1 ( 46 30 46 31 6 8 uint64_t 46 31 46 39 7 1 n 46 40 46 41 8 1 , 46 41 46 42 6 7 uint8_t 46 43 46 50 3 3 out 46 51 46 54 9 1 [ 46 54 46 55 18446744073709551615 1 8 46 55 46 56 18446744073709551615 1 ] 46 56 46 57 18446744073709551615 1 ) 46 57 46 58 6 1 { 47 1 47 2 18446744073709551615 1 # 48 1 48 2 18446744073709551615 2 if 48 2 48 4 18446744073709551615 7 defined 48 5 48 12 18446744073709551615 1 ( 48 12 48 13 18446744073709551615 8 __GNUC__ 48 13 48 21 18446744073709551615 1 ) 48 21 48 22 18446744073709551615 2 && 48 23 48 25 18446744073709551615 8 __GNUC__ 48 27 48 35 18446744073709551615 2 >= 48 36 48 38 18446744073709551615 1 4 48 39 48 40 18446744073709551615 2 && 48 41 48 43 18446744073709551615 12 __BYTE_ORDER 48 44 48 56 18446744073709551615 2 == 48 57 48 59 18446744073709551615 15 __LITTLE_ENDIAN 48 60 48 75 18446744073709551615 1 * 49 3 49 4 18446744073709551615 1 ( 49 4 49 5 18446744073709551615 8 uint64_t 49 5 49 13 7 1 * 49 14 49 15 18446744073709551615 1 ) 49 15 49 16 18446744073709551615 1 ( 49 16 49 17 18446744073709551615 3 out 49 17 49 20 9 1 ) 49 20 49 21 18446744073709551615 1 = 49 22 49 23 18446744073709551615 17 __builtin_bswap64 49 24 49 41 10 1 ( 49 41 49 42 10 1 n 49 42 49 43 8 1 ) 49 43 49 44 10 1 ; 49 44 49 45 18446744073709551615 1 # 50 1 50 2 18446744073709551615 4 else 50 2 50 6 18446744073709551615 10 write32_be 51 3 51 13 18446744073709551615 1 ( 51 13 51 14 18446744073709551615 1 ( 51 14 51 15 18446744073709551615 1 n 51 15 51 16 18446744073709551615 2 >> 51 17 51 19 18446744073709551615 2 32 51 20 51 22 18446744073709551615 1 ) 51 22 51 23 18446744073709551615 1 & 51 24 51 25 18446744073709551615 10 0xffffffff 51 26 51 36 18446744073709551615 1 , 51 36 51 37 18446744073709551615 3 out 51 38 51 41 18446744073709551615 1 ) 51 41 51 42 18446744073709551615 1 ; 51 42 51 43 18446744073709551615 10 write32_be 52 3 52 13 18446744073709551615 1 ( 52 13 52 14 18446744073709551615 1 n 52 14 52 15 18446744073709551615 1 & 52 16 52 17 18446744073709551615 10 0xffffffff 52 18 52 28 18446744073709551615 1 , 52 28 52 29 18446744073709551615 3 out 52 30 52 33 18446744073709551615 1 + 52 34 52 35 18446744073709551615 1 4 52 36 52 37 18446744073709551615 1 ) 52 37 52 38 18446744073709551615 1 ; 52 38 52 39 18446744073709551615 1 # 53 1 53 2 18446744073709551615 5 endif 53 2 53 7 18446744073709551615 1 } 54 1 54 2 18446744073709551615 67 /* --- Optional OpenMP parallelisation of consecutive blocks --- */ 56 1 56 68 18446744073709551615 1 # 57 1 57 2 18446744073709551615 5 ifdef 57 2 57 7 18446744073709551615 11 WITH_OPENMP 57 8 57 19 18446744073709551615 1 # 58 1 58 2 18446744073709551615 6 define 58 3 58 9 18446744073709551615 19 OPENMP_PARALLEL_FOR 58 10 58 29 18446744073709551615 7 _Pragma 58 30 58 37 18446744073709551615 1 ( 58 37 58 38 18446744073709551615 18 "omp parallel for" 58 38 58 56 18446744073709551615 1 ) 58 56 58 57 18446744073709551615 1 # 59 1 59 2 18446744073709551615 4 else 59 2 59 6 18446744073709551615 1 # 60 1 60 2 18446744073709551615 6 define 60 3 60 9 18446744073709551615 19 OPENMP_PARALLEL_FOR 60 10 60 29 18446744073709551615 1 # 61 1 61 2 18446744073709551615 5 endif 61 2 61 7 18446744073709551615 223 /* Prepare block (of blocksz bytes) to contain md padding denoting a msg-size
 * message (in bytes).  block has a prefix of used bytes.
 *
 * Message length is expressed in 32 bits (so suitable for sha1, sha256, sha512). */ 63 1 66 85 18446744073709551615 6 static 67 1 67 7 18446744073709551615 6 inline 67 8 67 14 18446744073709551615 4 void 67 15 67 19 18446744073709551615 6 md_pad 67 20 67 26 11 1 ( 67 26 67 27 11 7 uint8_t 67 27 67 34 3 1 * 67 35 67 36 18446744073709551615 5 block 67 36 67 41 12 1 , 67 41 67 42 11 6 size_t 67 43 67 49 13 7 blocksz 67 50 67 57 14 1 , 67 57 67 58 11 6 size_t 67 59 67 65 13 4 used 67 66 67 70 15 1 , 67 70 67 71 11 6 size_t 67 72 67 78 13 3 msg 67 79 67 82 16 1 ) 67 82 67 83 11 1 { 68 1 68 2 18446744073709551615 6 memset 69 3 69 9 17 1 ( 69 9 69 10 17 5 block 69 10 69 15 12 1 + 69 16 69 17 18446744073709551615 4 used 69 18 69 22 15 1 , 69 22 69 23 17 1 0 69 24 69 25 18446744073709551615 1 , 69 25 69 26 17 7 blocksz 69 27 69 34 14 1 - 69 35 69 36 18446744073709551615 4 used 69 37 69 41 15 1 - 69 42 69 43 18446744073709551615 1 4 69 44 69 45 18446744073709551615 1 ) 69 45 69 46 17 1 ; 69 46 69 47 18446744073709551615 5 block 70 3 70 8 12 1 [ 70 8 70 9 18446744073709551615 4 used 70 9 70 13 15 1 ] 70 13 70 14 18446744073709551615 1 = 70 15 70 16 18446744073709551615 4 0x80 70 17 70 21 18446744073709551615 1 ; 70 21 70 22 18446744073709551615 5 block 71 3 71 8 12 2 += 71 9 71 11 18446744073709551615 7 blocksz 71 12 71 19 14 1 - 71 20 71 21 18446744073709551615 1 4 71 22 71 23 18446744073709551615 1 ; 71 23 71 24 18446744073709551615 10 write32_be 72 3 72 13 0 1 ( 72 13 72 14 0 1 ( 72 14 72 15 18446744073709551615 8 uint32_t 72 15 72 23 1 1 ) 72 23 72 24 18446744073709551615 1 ( 72 25 72 26 18446744073709551615 3 msg 72 26 72 29 16 1 * 72 30 72 31 18446744073709551615 1 8 72 32 72 33 18446744073709551615 1 ) 72 33 72 34 18446744073709551615 1 , 72 34 72 35 0 5 block 72 36 72 41 12 1 ) 72 41 72 42 0 1 ; 72 42 72 43 18446744073709551615 1 } 73 1 73 2 18446744073709551615 60 /* Internal function/type names for hash-specific things. */ 75 1 75 61 18446744073709551615 1 # 76 1 76 2 18446744073709551615 6 define 76 2 76 8 18446744073709551615 8 HMAC_CTX 76 9 76 17 18446744073709551615 1 ( 76 17 76 18 18446744073709551615 5 _name 76 18 76 23 18446744073709551615 1 ) 76 23 76 24 18446744073709551615 5 HMAC_ 76 25 76 30 18446744073709551615 2 ## 76 31 76 33 18446744073709551615 5 _name 76 34 76 39 18446744073709551615 2 ## 76 40 76 42 18446744073709551615 4 _ctx 76 43 76 47 18446744073709551615 1 # 77 1 77 2 18446744073709551615 6 define 77 2 77 8 18446744073709551615 9 HMAC_INIT 77 9 77 18 18446744073709551615 1 ( 77 18 77 19 18446744073709551615 5 _name 77 19 77 24 18446744073709551615 1 ) 77 24 77 25 18446744073709551615 5 HMAC_ 77 26 77 31 18446744073709551615 2 ## 77 32 77 34 18446744073709551615 5 _name 77 35 77 40 18446744073709551615 2 ## 77 41 77 43 18446744073709551615 5 _init 77 44 77 49 18446744073709551615 1 # 78 1 78 2 18446744073709551615 6 define 78 2 78 8 18446744073709551615 11 HMAC_UPDATE 78 9 78 20 18446744073709551615 1 ( 78 20 78 21 18446744073709551615 5 _name 78 21 78 26 18446744073709551615 1 ) 78 26 78 27 18446744073709551615 5 HMAC_ 78 28 78 33 18446744073709551615 2 ## 78 34 78 36 18446744073709551615 5 _name 78 37 78 42 18446744073709551615 2 ## 78 43 78 45 18446744073709551615 7 _update 78 46 78 53 18446744073709551615 1 # 79 1 79 2 18446744073709551615 6 define 79 2 79 8 18446744073709551615 10 HMAC_FINAL 79 9 79 19 18446744073709551615 1 ( 79 19 79 20 18446744073709551615 5 _name 79 20 79 25 18446744073709551615 1 ) 79 25 79 26 18446744073709551615 5 HMAC_ 79 27 79 32 18446744073709551615 2 ## 79 33 79 35 18446744073709551615 5 _name 79 36 79 41 18446744073709551615 2 ## 79 42 79 44 18446744073709551615 6 _final 79 45 79 51 18446744073709551615 1 # 81 1 81 2 18446744073709551615 6 define 81 2 81 8 18446744073709551615 8 PBKDF2_F 81 9 81 17 18446744073709551615 1 ( 81 17 81 18 18446744073709551615 5 _name 81 18 81 23 18446744073709551615 1 ) 81 23 81 24 18446744073709551615 9 pbkdf2_f_ 81 25 81 34 18446744073709551615 2 ## 81 35 81 37 18446744073709551615 5 _name 81 38 81 43 18446744073709551615 1 # 82 1 82 2 18446744073709551615 6 define 82 2 82 8 18446744073709551615 6 PBKDF2 82 9 82 15 18446744073709551615 1 ( 82 15 82 16 18446744073709551615 5 _name 82 16 82 21 18446744073709551615 1 ) 82 21 82 22 18446744073709551615 7 pbkdf2_ 82 23 82 30 18446744073709551615 2 ## 82 31 82 33 18446744073709551615 5 _name 82 34 82 39 18446744073709551615 973 /* This macro expands to decls for the whole implementation for a given
 * hash function.  Arguments are:
 *
 * _name like 'sha1', added to symbol names
 * _blocksz block size, in bytes
 * _hashsz digest output, in bytes
 * _ctx hash context type
 * _init hash context initialisation function
 *    args: (_ctx *c)
 * _update hash context update function
 *    args: (_ctx *c, const void *data, size_t ndata)
 * _final hash context finish function
 *    args: (void *out, _ctx *c)
 * _xform hash context raw block update function
 *    args: (_ctx *c, const void *data)
 * _xcpy hash context raw copy function (only need copy hash state)
 *    args: (_ctx * restrict out, const _ctx *restrict in)
 * _xtract hash context state extraction
 *    args: args (_ctx *restrict c, uint8_t *restrict out)
 * _xxor hash context xor function (only need xor hash state)
 *    args: (_ctx *restrict out, const _ctx *restrict in)
 *
 * The resulting function is named PBKDF2(_name).
 */ 84 1 107 4 18446744073709551615 1 # 108 1 108 2 18446744073709551615 6 define 108 2 108 8 18446744073709551615 11 DECL_PBKDF2 108 9 108 20 18446744073709551615 1 ( 108 20 108 21 18446744073709551615 5 _name 108 21 108 26 18446744073709551615 1 , 108 26 108 27 18446744073709551615 8 _blocksz 108 28 108 36 18446744073709551615 1 , 108 36 108 37 18446744073709551615 7 _hashsz 108 38 108 45 18446744073709551615 1 , 108 45 108 46 18446744073709551615 4 _ctx 108 47 108 51 18446744073709551615 1 , 108 51 108 52 18446744073709551615 5 _init 109 21 109 26 18446744073709551615 1 , 109 26 109 27 18446744073709551615 7 _update 109 28 109 35 18446744073709551615 1 , 109 35 109 36 18446744073709551615 6 _xform 109 37 109 43 18446744073709551615 1 , 109 43 109 44 18446744073709551615 6 _final 109 45 109 51 18446744073709551615 1 , 109 51 109 52 18446744073709551615 5 _xcpy 109 53 109 58 18446744073709551615 1 , 109 58 109 59 18446744073709551615 7 _xtract 109 60 109 67 18446744073709551615 1 , 109 67 109 68 18446744073709551615 5 _xxor 109 69 109 74 18446744073709551615 1 ) 109 74 109 75 18446744073709551615 7 typedef 110 3 110 10 18446744073709551615 6 struct 110 11 110 17 18446744073709551615 1 { 110 18 110 19 18446744073709551615 4 _ctx 111 5 111 9 18446744073709551615 5 inner 111 10 111 15 18446744073709551615 1 ; 111 15 111 16 18446744073709551615 4 _ctx 112 5 112 9 18446744073709551615 5 outer 112 10 112 15 18446744073709551615 1 ; 112 15 112 16 18446744073709551615 1 } 113 3 113 4 18446744073709551615 8 HMAC_CTX 113 5 113 13 18446744073709551615 1 ( 113 13 113 14 18446744073709551615 5 _name 113 14 113 19 18446744073709551615 1 ) 113 19 113 20 18446744073709551615 1 ; 113 20 113 21 18446744073709551615 6 static 115 3 115 9 18446744073709551615 6 inline 115 10 115 16 18446744073709551615 4 void 115 17 115 21 18446744073709551615 9 HMAC_INIT 115 22 115 31 18446744073709551615 1 ( 115 31 115 32 18446744073709551615 5 _name 115 32 115 37 18446744073709551615 1 ) 115 37 115 38 18446744073709551615 1 ( 115 38 115 39 18446744073709551615 8 HMAC_CTX 115 39 115 47 18446744073709551615 1 ( 115 47 115 48 18446744073709551615 5 _name 115 48 115 53 18446744073709551615 1 ) 115 53 115 54 18446744073709551615 1 * 115 55 115 56 18446744073709551615 3 ctx 115 56 115 59 18446744073709551615 1 , 115 59 115 60 18446744073709551615 5 const 116 39 116 44 18446744073709551615 7 uint8_t 116 45 116 52 18446744073709551615 1 * 116 53 116 54 18446744073709551615 3 key 116 54 116 57 18446744073709551615 1 , 116 57 116 58 18446744073709551615 6 size_t 116 59 116 65 18446744073709551615 4 nkey 116 66 116 70 18446744073709551615 1 ) 116 70 116 71 18446744073709551615 1 { 117 3 117 4 18446744073709551615 18 /* Prepare key: */ 118 5 118 23 18446744073709551615 7 uint8_t 119 5 119 12 18446744073709551615 1 k 119 13 119 14 18446744073709551615 1 [ 119 14 119 15 18446744073709551615 8 _blocksz 119 15 119 23 18446744073709551615 1 ] 119 23 119 24 18446744073709551615 1 ; 119 24 119 25 18446744073709551615 24 /* Shorten long keys. */ 121 5 121 29 18446744073709551615 2 if 122 5 122 7 18446744073709551615 1 ( 122 8 122 9 18446744073709551615 4 nkey 122 9 122 13 18446744073709551615 1 > 122 14 122 15 18446744073709551615 8 _blocksz 122 16 122 24 18446744073709551615 1 ) 122 24 122 25 18446744073709551615 1 { 123 5 123 6 18446744073709551615 5 _init 124 7 124 12 18446744073709551615 1 ( 124 12 124 13 18446744073709551615 1 & 124 13 124 14 18446744073709551615 3 ctx 124 14 124 17 18446744073709551615 2 -> 124 17 124 19 18446744073709551615 5 inner 124 19 124 24 18446744073709551615 1 ) 124 24 124 25 18446744073709551615 1 ; 124 25 124 26 18446744073709551615 7 _update 125 7 125 14 18446744073709551615 1 ( 125 14 125 15 18446744073709551615 1 & 125 15 125 16 18446744073709551615 3 ctx 125 16 125 19 18446744073709551615 2 -> 125 19 125 21 18446744073709551615 5 inner 125 21 125 26 18446744073709551615 1 , 125 26 125 27 18446744073709551615 3 key 125 28 125 31 18446744073709551615 1 , 125 31 125 32 18446744073709551615 4 nkey 125 33 125 37 18446744073709551615 1 ) 125 37 125 38 18446744073709551615 1 ; 125 38 125 39 18446744073709551615 6 _final 126 7 126 13 18446744073709551615 1 ( 126 13 126 14 18446744073709551615 1 k 126 14 126 15 18446744073709551615 1 , 126 15 126 16 18446744073709551615 1 & 126 17 126 18 18446744073709551615 3 ctx 126 18 126 21 18446744073709551615 2 -> 126 21 126 23 18446744073709551615 5 inner 126 23 126 28 18446744073709551615 1 ) 126 28 126 29 18446744073709551615 1 ; 126 29 126 30 18446744073709551615 3 key 128 7 128 10 18446744073709551615 1 = 128 11 128 12 18446744073709551615 1 k 128 13 128 14 18446744073709551615 1 ; 128 14 128 15 18446744073709551615 4 nkey 129 7 129 11 18446744073709551615 1 = 129 12 129 13 18446744073709551615 7 _hashsz 129 14 129 21 18446744073709551615 1 ; 129 21 129 22 18446744073709551615 1 } 130 5 130 6 18446744073709551615 57 /* Standard doesn't cover case where blocksz < hashsz. */ 132 5 132 62 18446744073709551615 6 assert 133 5 133 11 18446744073709551615 1 ( 133 11 133 12 18446744073709551615 4 nkey 133 12 133 16 18446744073709551615 2 <= 133 17 133 19 18446744073709551615 8 _blocksz 133 20 133 28 18446744073709551615 1 ) 133 28 133 29 18446744073709551615 1 ; 133 29 133 30 18446744073709551615 32 /* Right zero-pad short keys. */ 135 5 135 37 18446744073709551615 2 if 136 5 136 7 18446744073709551615 1 ( 136 8 136 9 18446744073709551615 1 k 136 9 136 10 18446744073709551615 2 != 136 11 136 13 18446744073709551615 3 key 136 14 136 17 18446744073709551615 1 ) 136 17 136 18 18446744073709551615 6 memcpy 137 7 137 13 18446744073709551615 1 ( 137 13 137 14 18446744073709551615 1 k 137 14 137 15 18446744073709551615 1 , 137 15 137 16 18446744073709551615 3 key 137 17 137 20 18446744073709551615 1 , 137 20 137 21 18446744073709551615 4 nkey 137 22 137 26 18446744073709551615 1 ) 137 26 137 27 18446744073709551615 1 ; 137 27 137 28 18446744073709551615 2 if 138 5 138 7 18446744073709551615 1 ( 138 8 138 9 18446744073709551615 8 _blocksz 138 9 138 17 18446744073709551615 1 > 138 18 138 19 18446744073709551615 4 nkey 138 20 138 24 18446744073709551615 1 ) 138 24 138 25 18446744073709551615 6 memset 139 7 139 13 18446744073709551615 1 ( 139 13 139 14 18446744073709551615 1 k 139 14 139 15 18446744073709551615 1 + 139 16 139 17 18446744073709551615 4 nkey 139 18 139 22 18446744073709551615 1 , 139 22 139 23 18446744073709551615 1 0 139 24 139 25 18446744073709551615 1 , 139 25 139 26 18446744073709551615 8 _blocksz 139 27 139 35 18446744073709551615 1 - 139 36 139 37 18446744073709551615 4 nkey 139 38 139 42 18446744073709551615 1 ) 139 42 139 43 18446744073709551615 1 ; 139 43 139 44 18446744073709551615 34 /* Start inner hash computation */ 141 5 141 39 18446744073709551615 7 uint8_t 142 5 142 12 18446744073709551615 9 blk_inner 142 13 142 22 18446744073709551615 1 [ 142 22 142 23 18446744073709551615 8 _blocksz 142 23 142 31 18446744073709551615 1 ] 142 31 142 32 18446744073709551615 1 ; 142 32 142 33 18446744073709551615 7 uint8_t 143 5 143 12 18446744073709551615 9 blk_outer 143 13 143 22 18446744073709551615 1 [ 143 22 143 23 18446744073709551615 8 _blocksz 143 23 143 31 18446744073709551615 1 ] 143 31 143 32 18446744073709551615 1 ; 143 32 143 33 18446744073709551615 3 for 145 5 145 8 18446744073709551615 1 ( 145 9 145 10 18446744073709551615 6 size_t 145 10 145 16 18446744073709551615 1 i 145 17 145 18 18446744073709551615 1 = 145 19 145 20 18446744073709551615 1 0 145 21 145 22 18446744073709551615 1 ; 145 22 145 23 18446744073709551615 1 i 145 24 145 25 18446744073709551615 1 < 145 26 145 27 18446744073709551615 8 _blocksz 145 28 145 36 18446744073709551615 1 ; 145 36 145 37 18446744073709551615 1 i 145 38 145 39 18446744073709551615 2 ++ 145 39 145 41 18446744073709551615 1 ) 145 41 145 42 18446744073709551615 1 { 146 5 146 6 18446744073709551615 9 blk_inner 147 7 147 16 18446744073709551615 1 [ 147 16 147 17 18446744073709551615 1 i 147 17 147 18 18446744073709551615 1 ] 147 18 147 19 18446744073709551615 1 = 147 20 147 21 18446744073709551615 4 0x36 147 22 147 26 18446744073709551615 1 ^ 147 27 147 28 18446744073709551615 1 k 147 29 147 30 18446744073709551615 1 [ 147 30 147 31 18446744073709551615 1 i 147 31 147 32 18446744073709551615 1 ] 147 32 147 33 18446744073709551615 1 ; 147 33 147 34 18446744073709551615 9 blk_outer 148 7 148 16 18446744073709551615 1 [ 148 16 148 17 18446744073709551615 1 i 148 17 148 18 18446744073709551615 1 ] 148 18 148 19 18446744073709551615 1 = 148 20 148 21 18446744073709551615 4 0x5c 148 22 148 26 18446744073709551615 1 ^ 148 27 148 28 18446744073709551615 1 k 148 29 148 30 18446744073709551615 1 [ 148 30 148 31 18446744073709551615 1 i 148 31 148 32 18446744073709551615 1 ] 148 32 148 33 18446744073709551615 1 ; 148 33 148 34 18446744073709551615 1 } 149 5 149 6 18446744073709551615 5 _init 151 5 151 10 18446744073709551615 1 ( 151 10 151 11 18446744073709551615 1 & 151 11 151 12 18446744073709551615 3 ctx 151 12 151 15 18446744073709551615 2 -> 151 15 151 17 18446744073709551615 5 inner 151 17 151 22 18446744073709551615 1 ) 151 22 151 23 18446744073709551615 1 ; 151 23 151 24 18446744073709551615 7 _update 152 5 152 12 18446744073709551615 1 ( 152 12 152 13 18446744073709551615 1 & 152 13 152 14 18446744073709551615 3 ctx 152 14 152 17 18446744073709551615 2 -> 152 17 152 19 18446744073709551615 5 inner 152 19 152 24 18446744073709551615 1 , 152 24 152 25 18446744073709551615 9 blk_inner 152 26 152 35 18446744073709551615 1 , 152 35 152 36 18446744073709551615 6 sizeof 152 37 152 43 18446744073709551615 9 blk_inner 152 44 152 53 18446744073709551615 1 ) 152 53 152 54 18446744073709551615 1 ; 152 54 152 55 18446744073709551615 16 /* And outer. */ 154 5 154 21 18446744073709551615 5 _init 155 5 155 10 18446744073709551615 1 ( 155 10 155 11 18446744073709551615 1 & 155 11 155 12 18446744073709551615 3 ctx 155 12 155 15 18446744073709551615 2 -> 155 15 155 17 18446744073709551615 5 outer 155 17 155 22 18446744073709551615 1 ) 155 22 155 23 18446744073709551615 1 ; 155 23 155 24 18446744073709551615 7 _update 156 5 156 12 18446744073709551615 1 ( 156 12 156 13 18446744073709551615 1 & 156 13 156 14 18446744073709551615 3 ctx 156 14 156 17 18446744073709551615 2 -> 156 17 156 19 18446744073709551615 5 outer 156 19 156 24 18446744073709551615 1 , 156 24 156 25 18446744073709551615 9 blk_outer 156 26 156 35 18446744073709551615 1 , 156 35 156 36 18446744073709551615 6 sizeof 156 37 156 43 18446744073709551615 9 blk_outer 156 44 156 53 18446744073709551615 1 ) 156 53 156 54 18446744073709551615 1 ; 156 54 156 55 18446744073709551615 1 } 157 3 157 4 18446744073709551615 6 static 159 3 159 9 18446744073709551615 6 inline 159 10 159 16 18446744073709551615 4 void 159 17 159 21 18446744073709551615 11 HMAC_UPDATE 159 22 159 33 18446744073709551615 1 ( 159 33 159 34 18446744073709551615 5 _name 159 34 159 39 18446744073709551615 1 ) 159 39 159 40 18446744073709551615 1 ( 159 40 159 41 18446744073709551615 8 HMAC_CTX 159 41 159 49 18446744073709551615 1 ( 159 49 159 50 18446744073709551615 5 _name 159 50 159 55 18446744073709551615 1 ) 159 55 159 56 18446744073709551615 1 * 159 57 159 58 18446744073709551615 3 ctx 159 58 159 61 18446744073709551615 1 , 159 61 159 62 18446744073709551615 5 const 160 41 160 46 18446744073709551615 4 void 160 47 160 51 18446744073709551615 1 * 160 52 160 53 18446744073709551615 4 data 160 53 160 57 18446744073709551615 1 , 160 57 160 58 18446744073709551615 6 size_t 160 59 160 65 18446744073709551615 5 ndata 160 66 160 71 18446744073709551615 1 ) 160 71 160 72 18446744073709551615 1 { 161 3 161 4 18446744073709551615 7 _update 162 5 162 12 18446744073709551615 1 ( 162 12 162 13 18446744073709551615 1 & 162 13 162 14 18446744073709551615 3 ctx 162 14 162 17 18446744073709551615 2 -> 162 17 162 19 18446744073709551615 5 inner 162 19 162 24 18446744073709551615 1 , 162 24 162 25 18446744073709551615 4 data 162 26 162 30 18446744073709551615 1 , 162 30 162 31 18446744073709551615 5 ndata 162 32 162 37 18446744073709551615 1 ) 162 37 162 38 18446744073709551615 1 ; 162 38 162 39 18446744073709551615 1 } 163 3 163 4 18446744073709551615 6 static 165 3 165 9 18446744073709551615 6 inline 165 10 165 16 18446744073709551615 4 void 165 17 165 21 18446744073709551615 10 HMAC_FINAL 165 22 165 32 18446744073709551615 1 ( 165 32 165 33 18446744073709551615 5 _name 165 33 165 38 18446744073709551615 1 ) 165 38 165 39 18446744073709551615 1 ( 165 39 165 40 18446744073709551615 8 HMAC_CTX 165 40 165 48 18446744073709551615 1 ( 165 48 165 49 18446744073709551615 5 _name 165 49 165 54 18446744073709551615 1 ) 165 54 165 55 18446744073709551615 1 * 165 56 165 57 18446744073709551615 3 ctx 165 57 165 60 18446744073709551615 1 , 165 60 165 61 18446744073709551615 7 uint8_t 166 40 166 47 18446744073709551615 3 out 166 48 166 51 18446744073709551615 1 [ 166 51 166 52 18446744073709551615 7 _hashsz 166 52 166 59 18446744073709551615 1 ] 166 59 166 60 18446744073709551615 1 ) 166 60 166 61 18446744073709551615 1 { 167 3 167 4 18446744073709551615 6 _final 168 5 168 11 18446744073709551615 1 ( 168 11 168 12 18446744073709551615 3 out 168 12 168 15 18446744073709551615 1 , 168 15 168 16 18446744073709551615 1 & 168 17 168 18 18446744073709551615 3 ctx 168 18 168 21 18446744073709551615 2 -> 168 21 168 23 18446744073709551615 5 inner 168 23 168 28 18446744073709551615 1 ) 168 28 168 29 18446744073709551615 1 ; 168 29 168 30 18446744073709551615 7 _update 169 5 169 12 18446744073709551615 1 ( 169 12 169 13 18446744073709551615 1 & 169 13 169 14 18446744073709551615 3 ctx 169 14 169 17 18446744073709551615 2 -> 169 17 169 19 18446744073709551615 5 outer 169 19 169 24 18446744073709551615 1 , 169 24 169 25 18446744073709551615 3 out 169 26 169 29 18446744073709551615 1 , 169 29 169 30 18446744073709551615 7 _hashsz 169 31 169 38 18446744073709551615 1 ) 169 38 169 39 18446744073709551615 1 ; 169 39 169 40 18446744073709551615 6 _final 170 5 170 11 18446744073709551615 1 ( 170 11 170 12 18446744073709551615 3 out 170 12 170 15 18446744073709551615 1 , 170 15 170 16 18446744073709551615 1 & 170 17 170 18 18446744073709551615 3 ctx 170 18 170 21 18446744073709551615 2 -> 170 21 170 23 18446744073709551615 5 outer 170 23 170 28 18446744073709551615 1 ) 170 28 170 29 18446744073709551615 1 ; 170 29 170 30 18446744073709551615 1 } 171 3 171 4 18446744073709551615 20 /* --- PBKDF2 --- */ 174 3 174 23 18446744073709551615 6 static 175 3 175 9 18446744073709551615 6 inline 175 10 175 16 18446744073709551615 4 void 175 17 175 21 18446744073709551615 8 PBKDF2_F 175 22 175 30 18446744073709551615 1 ( 175 30 175 31 18446744073709551615 5 _name 175 31 175 36 18446744073709551615 1 ) 175 36 175 37 18446744073709551615 1 ( 175 37 175 38 18446744073709551615 5 const 175 38 175 43 18446744073709551615 8 HMAC_CTX 175 44 175 52 18446744073709551615 1 ( 175 52 175 53 18446744073709551615 5 _name 175 53 175 58 18446744073709551615 1 ) 175 58 175 59 18446744073709551615 1 * 175 60 175 61 18446744073709551615 8 startctx 175 61 175 69 18446744073709551615 1 , 175 69 175 70 18446744073709551615 8 uint32_t 176 38 176 46 18446744073709551615 7 counter 176 47 176 54 18446744073709551615 1 , 176 54 176 55 18446744073709551615 5 const 177 38 177 43 18446744073709551615 7 uint8_t 177 44 177 51 18446744073709551615 1 * 177 52 177 53 18446744073709551615 4 salt 177 53 177 57 18446744073709551615 1 , 177 57 177 58 18446744073709551615 6 size_t 177 59 177 65 18446744073709551615 5 nsalt 177 66 177 71 18446744073709551615 1 , 177 71 177 72 18446744073709551615 8 uint32_t 178 38 178 46 18446744073709551615 10 iterations 178 47 178 57 18446744073709551615 1 , 178 57 178 58 18446744073709551615 7 uint8_t 179 38 179 45 18446744073709551615 1 * 179 46 179 47 18446744073709551615 3 out 179 47 179 50 18446744073709551615 1 ) 179 50 179 51 18446744073709551615 1 { 180 3 180 4 18446744073709551615 7 uint8_t 181 5 181 12 18446744073709551615 8 countbuf 181 13 181 21 18446744073709551615 1 [ 181 21 181 22 18446744073709551615 1 4 181 22 181 23 18446744073709551615 1 ] 181 23 181 24 18446744073709551615 1 ; 181 24 181 25 18446744073709551615 10 write32_be 182 5 182 15 18446744073709551615 1 ( 182 15 182 16 18446744073709551615 7 counter 182 16 182 23 18446744073709551615 1 , 182 23 182 24 18446744073709551615 8 countbuf 182 25 182 33 18446744073709551615 1 ) 182 33 182 34 18446744073709551615 1 ; 182 34 182 35 18446744073709551615 43 /* Prepare loop-invariant padding block. */ 184 5 184 48 18446744073709551615 7 uint8_t 185 5 185 12 18446744073709551615 6 Ublock 185 13 185 19 18446744073709551615 1 [ 185 19 185 20 18446744073709551615 8 _blocksz 185 20 185 28 18446744073709551615 1 ] 185 28 185 29 18446744073709551615 1 ; 185 29 185 30 18446744073709551615 6 md_pad 186 5 186 11 18446744073709551615 1 ( 186 11 186 12 18446744073709551615 6 Ublock 186 12 186 18 18446744073709551615 1 , 186 18 186 19 18446744073709551615 8 _blocksz 186 20 186 28 18446744073709551615 1 , 186 28 186 29 18446744073709551615 7 _hashsz 186 30 186 37 18446744073709551615 1 , 186 37 186 38 18446744073709551615 8 _blocksz 186 39 186 47 18446744073709551615 1 + 186 48 186 49 18446744073709551615 7 _hashsz 186 50 186 57 18446744073709551615 1 ) 186 57 186 58 18446744073709551615 1 ; 186 58 186 59 18446744073709551615 163 /* First iteration:                                                       \
     *   U_1 = PRF(P, S || INT_32_BE(i))                                      \
     */ 188 5 190 8 18446744073709551615 8 HMAC_CTX 191 5 191 13 18446744073709551615 1 ( 191 13 191 14 18446744073709551615 5 _name 191 14 191 19 18446744073709551615 1 ) 191 19 191 20 18446744073709551615 3 ctx 191 21 191 24 18446744073709551615 1 = 191 25 191 26 18446744073709551615 1 * 191 27 191 28 18446744073709551615 8 startctx 191 28 191 36 18446744073709551615 1 ; 191 36 191 37 18446744073709551615 11 HMAC_UPDATE 192 5 192 16 18446744073709551615 1 ( 192 16 192 17 18446744073709551615 5 _name 192 17 192 22 18446744073709551615 1 ) 192 22 192 23 18446744073709551615 1 ( 192 23 192 24 18446744073709551615 1 & 192 24 192 25 18446744073709551615 3 ctx 192 25 192 28 18446744073709551615 1 , 192 28 192 29 18446744073709551615 4 salt 192 30 192 34 18446744073709551615 1 , 192 34 192 35 18446744073709551615 5 nsalt 192 36 192 41 18446744073709551615 1 ) 192 41 192 42 18446744073709551615 1 ; 192 42 192 43 18446744073709551615 11 HMAC_UPDATE 193 5 193 16 18446744073709551615 1 ( 193 16 193 17 18446744073709551615 5 _name 193 17 193 22 18446744073709551615 1 ) 193 22 193 23 18446744073709551615 1 ( 193 23 193 24 18446744073709551615 1 & 193 24 193 25 18446744073709551615 3 ctx 193 25 193 28 18446744073709551615 1 , 193 28 193 29 18446744073709551615 8 countbuf 193 30 193 38 18446744073709551615 1 , 193 38 193 39 18446744073709551615 6 sizeof 193 40 193 46 18446744073709551615 8 countbuf 193 47 193 55 18446744073709551615 1 ) 193 55 193 56 18446744073709551615 1 ; 193 56 193 57 18446744073709551615 10 HMAC_FINAL 194 5 194 15 18446744073709551615 1 ( 194 15 194 16 18446744073709551615 5 _name 194 16 194 21 18446744073709551615 1 ) 194 21 194 22 18446744073709551615 1 ( 194 22 194 23 18446744073709551615 1 & 194 23 194 24 18446744073709551615 3 ctx 194 24 194 27 18446744073709551615 1 , 194 27 194 28 18446744073709551615 6 Ublock 194 29 194 35 18446744073709551615 1 ) 194 35 194 36 18446744073709551615 1 ; 194 36 194 37 18446744073709551615 4 _ctx 195 5 195 9 18446744073709551615 6 result 195 10 195 16 18446744073709551615 1 = 195 17 195 18 18446744073709551615 3 ctx 195 19 195 22 18446744073709551615 1 . 195 22 195 23 18446744073709551615 5 outer 195 23 195 28 18446744073709551615 1 ; 195 28 195 29 18446744073709551615 163 /* Subsequent iterations:                                                 \
     *   U_c = PRF(P, U_{c-1})                                                \
     */ 197 5 199 8 18446744073709551615 3 for 200 5 200 8 18446744073709551615 1 ( 200 9 200 10 18446744073709551615 8 uint32_t 200 10 200 18 18446744073709551615 1 i 200 19 200 20 18446744073709551615 1 = 200 21 200 22 18446744073709551615 1 1 200 23 200 24 18446744073709551615 1 ; 200 24 200 25 18446744073709551615 1 i 200 26 200 27 18446744073709551615 1 < 200 28 200 29 18446744073709551615 10 iterations 200 30 200 40 18446744073709551615 1 ; 200 40 200 41 18446744073709551615 1 i 200 42 200 43 18446744073709551615 2 ++ 200 43 200 45 18446744073709551615 1 ) 200 45 200 46 18446744073709551615 1 { 201 5 201 6 18446744073709551615 41 /* Complete inner hash with previous U */ 202 7 202 48 18446744073709551615 5 _xcpy 203 7 203 12 18446744073709551615 1 ( 203 12 203 13 18446744073709551615 1 & 203 13 203 14 18446744073709551615 3 ctx 203 14 203 17 18446744073709551615 1 . 203 17 203 18 18446744073709551615 5 inner 203 18 203 23 18446744073709551615 1 , 203 23 203 24 18446744073709551615 1 & 203 25 203 26 18446744073709551615 8 startctx 203 26 203 34 18446744073709551615 2 -> 203 34 203 36 18446744073709551615 5 inner 203 36 203 41 18446744073709551615 1 ) 203 41 203 42 18446744073709551615 1 ; 203 42 203 43 18446744073709551615 6 _xform 204 7 204 13 18446744073709551615 1 ( 204 13 204 14 18446744073709551615 1 & 204 14 204 15 18446744073709551615 3 ctx 204 15 204 18 18446744073709551615 1 . 204 18 204 19 18446744073709551615 5 inner 204 19 204 24 18446744073709551615 1 , 204 24 204 25 18446744073709551615 6 Ublock 204 26 204 32 18446744073709551615 1 ) 204 32 204 33 18446744073709551615 1 ; 204 33 204 34 18446744073709551615 7 _xtract 205 7 205 14 18446744073709551615 1 ( 205 14 205 15 18446744073709551615 1 & 205 15 205 16 18446744073709551615 3 ctx 205 16 205 19 18446744073709551615 1 . 205 19 205 20 18446744073709551615 5 inner 205 20 205 25 18446744073709551615 1 , 205 25 205 26 18446744073709551615 6 Ublock 205 27 205 33 18446744073709551615 1 ) 205 33 205 34 18446744073709551615 1 ; 205 34 205 35 18446744073709551615 43 /* Complete outer hash with inner output */ 206 7 206 50 18446744073709551615 5 _xcpy 207 7 207 12 18446744073709551615 1 ( 207 12 207 13 18446744073709551615 1 & 207 13 207 14 18446744073709551615 3 ctx 207 14 207 17 18446744073709551615 1 . 207 17 207 18 18446744073709551615 5 outer 207 18 207 23 18446744073709551615 1 , 207 23 207 24 18446744073709551615 1 & 207 25 207 26 18446744073709551615 8 startctx 207 26 207 34 18446744073709551615 2 -> 207 34 207 36 18446744073709551615 5 outer 207 36 207 41 18446744073709551615 1 ) 207 41 207 42 18446744073709551615 1 ; 207 42 207 43 18446744073709551615 6 _xform 208 7 208 13 18446744073709551615 1 ( 208 13 208 14 18446744073709551615 1 & 208 14 208 15 18446744073709551615 3 ctx 208 15 208 18 18446744073709551615 1 . 208 18 208 19 18446744073709551615 5 outer 208 19 208 24 18446744073709551615 1 , 208 24 208 25 18446744073709551615 6 Ublock 208 26 208 32 18446744073709551615 1 ) 208 32 208 33 18446744073709551615 1 ; 208 33 208 34 18446744073709551615 7 _xtract 209 7 209 14 18446744073709551615 1 ( 209 14 209 15 18446744073709551615 1 & 209 15 209 16 18446744073709551615 3 ctx 209 16 209 19 18446744073709551615 1 . 209 19 209 20 18446744073709551615 5 outer 209 20 209 25 18446744073709551615 1 , 209 25 209 26 18446744073709551615 6 Ublock 209 27 209 33 18446744073709551615 1 ) 209 33 209 34 18446744073709551615 1 ; 209 34 209 35 18446744073709551615 5 _xxor 210 7 210 12 18446744073709551615 1 ( 210 12 210 13 18446744073709551615 1 & 210 13 210 14 18446744073709551615 6 result 210 14 210 20 18446744073709551615 1 , 210 20 210 21 18446744073709551615 1 & 210 22 210 23 18446744073709551615 3 ctx 210 23 210 26 18446744073709551615 1 . 210 26 210 27 18446744073709551615 5 outer 210 27 210 32 18446744073709551615 1 ) 210 32 210 33 18446744073709551615 1 ; 210 33 210 34 18446744073709551615 1 } 211 5 211 6 18446744073709551615 39 /* Reform result into output buffer. */ 213 5 213 44 18446744073709551615 7 _xtract 214 5 214 12 18446744073709551615 1 ( 214 12 214 13 18446744073709551615 1 & 214 13 214 14 18446744073709551615 6 result 214 14 214 20 18446744073709551615 1 , 214 20 214 21 18446744073709551615 3 out 214 22 214 25 18446744073709551615 1 ) 214 25 214 26 18446744073709551615 1 ; 214 26 214 27 18446744073709551615 1 } 215 3 215 4 18446744073709551615 6 static 217 3 217 9 18446744073709551615 6 inline 217 10 217 16 18446744073709551615 4 void 217 17 217 21 18446744073709551615 6 PBKDF2 217 22 217 28 18446744073709551615 1 ( 217 28 217 29 18446744073709551615 5 _name 217 29 217 34 18446744073709551615 1 ) 217 34 217 35 18446744073709551615 1 ( 217 35 217 36 18446744073709551615 5 const 217 36 217 41 18446744073709551615 7 uint8_t 217 42 217 49 18446744073709551615 1 * 217 50 217 51 18446744073709551615 2 pw 217 51 217 53 18446744073709551615 1 , 217 53 217 54 18446744073709551615 6 size_t 217 55 217 61 18446744073709551615 3 npw 217 62 217 65 18446744073709551615 1 , 217 65 217 66 18446744073709551615 5 const 218 22 218 27 18446744073709551615 7 uint8_t 218 28 218 35 18446744073709551615 1 * 218 36 218 37 18446744073709551615 4 salt 218 37 218 41 18446744073709551615 1 , 218 41 218 42 18446744073709551615 6 size_t 218 43 218 49 18446744073709551615 5 nsalt 218 50 218 55 18446744073709551615 1 , 218 55 218 56 18446744073709551615 8 uint32_t 219 22 219 30 18446744073709551615 10 iterations 219 31 219 41 18446744073709551615 1 , 219 41 219 42 18446744073709551615 7 uint8_t 220 22 220 29 18446744073709551615 1 * 220 30 220 31 18446744073709551615 3 out 220 31 220 34 18446744073709551615 1 , 220 34 220 35 18446744073709551615 6 size_t 220 36 220 42 18446744073709551615 4 nout 220 43 220 47 18446744073709551615 1 ) 220 47 220 48 18446744073709551615 1 { 221 3 221 4 18446744073709551615 6 assert 222 5 222 11 18446744073709551615 1 ( 222 11 222 12 18446744073709551615 10 iterations 222 12 222 22 18446744073709551615 1 ) 222 22 222 23 18446744073709551615 1 ; 222 23 222 24 18446744073709551615 6 assert 223 5 223 11 18446744073709551615 1 ( 223 11 223 12 18446744073709551615 3 out 223 12 223 15 18446744073709551615 2 && 223 16 223 18 18446744073709551615 4 nout 223 19 223 23 18446744073709551615 1 ) 223 23 223 24 18446744073709551615 1 ; 223 24 223 25 18446744073709551615 36 /* Starting point for inner loop. */ 225 5 225 41 18446744073709551615 8 HMAC_CTX 226 5 226 13 18446744073709551615 1 ( 226 13 226 14 18446744073709551615 5 _name 226 14 226 19 18446744073709551615 1 ) 226 19 226 20 18446744073709551615 3 ctx 226 21 226 24 18446744073709551615 1 ; 226 24 226 25 18446744073709551615 9 HMAC_INIT 227 5 227 14 18446744073709551615 1 ( 227 14 227 15 18446744073709551615 5 _name 227 15 227 20 18446744073709551615 1 ) 227 20 227 21 18446744073709551615 1 ( 227 21 227 22 18446744073709551615 1 & 227 22 227 23 18446744073709551615 3 ctx 227 23 227 26 18446744073709551615 1 , 227 26 227 27 18446744073709551615 2 pw 227 28 227 30 18446744073709551615 1 , 227 30 227 31 18446744073709551615 3 npw 227 32 227 35 18446744073709551615 1 ) 227 35 227 36 18446744073709551615 1 ; 227 36 227 37 18446744073709551615 33 /* How many blocks do we need? */ 229 5 229 38 18446744073709551615 8 uint32_t 230 5 230 13 18446744073709551615 13 blocks_needed 230 14 230 27 18446744073709551615 1 = 230 28 230 29 18446744073709551615 1 ( 230 30 230 31 18446744073709551615 8 uint32_t 230 31 230 39 18446744073709551615 1 ) 230 39 230 40 18446744073709551615 1 ( 230 40 230 41 18446744073709551615 4 nout 230 41 230 45 18446744073709551615 1 + 230 46 230 47 18446744073709551615 7 _hashsz 230 48 230 55 18446744073709551615 1 - 230 56 230 57 18446744073709551615 1 1 230 58 230 59 18446744073709551615 1 ) 230 59 230 60 18446744073709551615 1 / 230 61 230 62 18446744073709551615 7 _hashsz 230 63 230 70 18446744073709551615 1 ; 230 70 230 71 18446744073709551615 19 OPENMP_PARALLEL_FOR 232 5 232 24 18446744073709551615 3 for 233 5 233 8 18446744073709551615 1 ( 233 9 233 10 18446744073709551615 8 uint32_t 233 10 233 18 18446744073709551615 7 counter 233 19 233 26 18446744073709551615 1 = 233 27 233 28 18446744073709551615 1 1 233 29 233 30 18446744073709551615 1 ; 233 30 233 31 18446744073709551615 7 counter 233 32 233 39 18446744073709551615 2 <= 233 40 233 42 18446744073709551615 13 blocks_needed 233 43 233 56 18446744073709551615 1 ; 233 56 233 57 18446744073709551615 7 counter 233 58 233 65 18446744073709551615 2 ++ 233 65 233 67 18446744073709551615 1 ) 233 67 233 68 18446744073709551615 1 { 234 5 234 6 18446744073709551615 7 uint8_t 235 7 235 14 18446744073709551615 5 block 235 15 235 20 18446744073709551615 1 [ 235 20 235 21 18446744073709551615 7 _hashsz 235 21 235 28 18446744073709551615 1 ] 235 28 235 29 18446744073709551615 1 ; 235 29 235 30 18446744073709551615 8 PBKDF2_F 236 7 236 15 18446744073709551615 1 ( 236 15 236 16 18446744073709551615 5 _name 236 16 236 21 18446744073709551615 1 ) 236 21 236 22 18446744073709551615 1 ( 236 22 236 23 18446744073709551615 1 & 236 23 236 24 18446744073709551615 3 ctx 236 24 236 27 18446744073709551615 1 , 236 27 236 28 18446744073709551615 7 counter 236 29 236 36 18446744073709551615 1 , 236 36 236 37 18446744073709551615 4 salt 236 38 236 42 18446744073709551615 1 , 236 42 236 43 18446744073709551615 5 nsalt 236 44 236 49 18446744073709551615 1 , 236 49 236 50 18446744073709551615 10 iterations 236 51 236 61 18446744073709551615 1 , 236 61 236 62 18446744073709551615 5 block 236 63 236 68 18446744073709551615 1 ) 236 68 236 69 18446744073709551615 1 ; 236 69 236 70 18446744073709551615 6 size_t 238 7 238 13 18446744073709551615 6 offset 238 14 238 20 18446744073709551615 1 = 238 21 238 22 18446744073709551615 1 ( 238 23 238 24 18446744073709551615 7 counter 238 24 238 31 18446744073709551615 1 - 238 32 238 33 18446744073709551615 1 1 238 34 238 35 18446744073709551615 1 ) 238 35 238 36 18446744073709551615 1 * 238 37 238 38 18446744073709551615 7 _hashsz 238 39 238 46 18446744073709551615 1 ; 238 46 238 47 18446744073709551615 6 size_t 239 7 239 13 18446744073709551615 5 taken 239 14 239 19 18446744073709551615 1 = 239 20 239 21 18446744073709551615 3 MIN 239 22 239 25 18446744073709551615 1 ( 239 25 239 26 18446744073709551615 4 nout 239 26 239 30 18446744073709551615 1 - 239 31 239 32 18446744073709551615 6 offset 239 33 239 39 18446744073709551615 1 , 239 39 239 40 18446744073709551615 7 _hashsz 239 41 239 48 18446744073709551615 1 ) 239 48 239 49 18446744073709551615 1 ; 239 49 239 50 18446744073709551615 6 memcpy 240 7 240 13 18446744073709551615 1 ( 240 13 240 14 18446744073709551615 3 out 240 14 240 17 18446744073709551615 1 + 240 18 240 19 18446744073709551615 6 offset 240 20 240 26 18446744073709551615 1 , 240 26 240 27 18446744073709551615 5 block 240 28 240 33 18446744073709551615 1 , 240 33 240 34 18446744073709551615 5 taken 240 35 240 40 18446744073709551615 1 ) 240 40 240 41 18446744073709551615 1 ; 240 41 240 42 18446744073709551615 1 } 241 5 241 6 18446744073709551615 1 } 242 3 242 4 18446744073709551615 6 static 244 1 244 7 18446744073709551615 6 inline 244 8 244 14 18446744073709551615 4 void 244 15 244 19 18446744073709551615 12 sha1_extract 244 20 244 32 18 1 ( 244 32 244 33 18 7 SHA_CTX 244 33 244 40 19 1 * 244 41 244 42 18446744073709551615 8 restrict 244 42 244 50 18446744073709551615 3 ctx 244 51 244 54 20 1 , 244 54 244 55 18 7 uint8_t 244 56 244 63 3 1 * 244 64 244 65 18446744073709551615 8 restrict 244 65 244 73 18446744073709551615 3 out 244 74 244 77 21 1 ) 244 77 244 78 18 1 { 245 1 245 2 18446744073709551615 10 write32_be 246 3 246 13 0 1 ( 246 13 246 14 0 3 ctx 246 14 246 17 20 2 -> 246 17 246 19 18446744073709551615 2 h0 246 19 246 21 22 1 , 246 21 246 22 0 3 out 246 23 246 26 21 1 ) 246 26 246 27 0 1 ; 246 27 246 28 18446744073709551615 10 write32_be 247 3 247 13 0 1 ( 247 13 247 14 0 3 ctx 247 14 247 17 20 2 -> 247 17 247 19 18446744073709551615 2 h1 247 19 247 21 23 1 , 247 21 247 22 0 3 out 247 23 247 26 21 1 + 247 27 247 28 18446744073709551615 1 4 247 29 247 30 18446744073709551615 1 ) 247 30 247 31 0 1 ; 247 31 247 32 18446744073709551615 10 write32_be 248 3 248 13 0 1 ( 248 13 248 14 0 3 ctx 248 14 248 17 20 2 -> 248 17 248 19 18446744073709551615 2 h2 248 19 248 21 24 1 , 248 21 248 22 0 3 out 248 23 248 26 21 1 + 248 27 248 28 18446744073709551615 1 8 248 29 248 30 18446744073709551615 1 ) 248 30 248 31 0 1 ; 248 31 248 32 18446744073709551615 10 write32_be 249 3 249 13 0 1 ( 249 13 249 14 0 3 ctx 249 14 249 17 20 2 -> 249 17 249 19 18446744073709551615 2 h3 249 19 249 21 25 1 , 249 21 249 22 0 3 out 249 23 249 26 21 1 + 249 27 249 28 18446744073709551615 2 12 249 29 249 31 18446744073709551615 1 ) 249 31 249 32 0 1 ; 249 32 249 33 18446744073709551615 10 write32_be 250 3 250 13 0 1 ( 250 13 250 14 0 3 ctx 250 14 250 17 20 2 -> 250 17 250 19 18446744073709551615 2 h4 250 19 250 21 26 1 , 250 21 250 22 0 3 out 250 23 250 26 21 1 + 250 27 250 28 18446744073709551615 2 16 250 29 250 31 18446744073709551615 1 ) 250 31 250 32 0 1 ; 250 32 250 33 18446744073709551615 1 } 251 1 251 2 18446744073709551615 6 static 253 1 253 7 18446744073709551615 6 inline 253 8 253 14 18446744073709551615 4 void 253 15 253 19 18446744073709551615 8 sha1_cpy 253 20 253 28 27 1 ( 253 28 253 29 27 7 SHA_CTX 253 29 253 36 19 1 * 253 37 253 38 18446744073709551615 8 restrict 253 38 253 46 18446744073709551615 3 out 253 47 253 50 28 1 , 253 50 253 51 27 5 const 253 52 253 57 18446744073709551615 7 SHA_CTX 253 58 253 65 19 1 * 253 66 253 67 18446744073709551615 8 restrict 253 67 253 75 18446744073709551615 2 in 253 76 253 78 29 1 ) 253 78 253 79 27 1 { 254 1 254 2 18446744073709551615 3 out 255 3 255 6 28 2 -> 255 6 255 8 18446744073709551615 2 h0 255 8 255 10 22 1 = 255 11 255 12 18446744073709551615 2 in 255 13 255 15 29 2 -> 255 15 255 17 18446744073709551615 2 h0 255 17 255 19 22 1 ; 255 19 255 20 18446744073709551615 3 out 256 3 256 6 28 2 -> 256 6 256 8 18446744073709551615 2 h1 256 8 256 10 23 1 = 256 11 256 12 18446744073709551615 2 in 256 13 256 15 29 2 -> 256 15 256 17 18446744073709551615 2 h1 256 17 256 19 23 1 ; 256 19 256 20 18446744073709551615 3 out 257 3 257 6 28 2 -> 257 6 257 8 18446744073709551615 2 h2 257 8 257 10 24 1 = 257 11 257 12 18446744073709551615 2 in 257 13 257 15 29 2 -> 257 15 257 17 18446744073709551615 2 h2 257 17 257 19 24 1 ; 257 19 257 20 18446744073709551615 3 out 258 3 258 6 28 2 -> 258 6 258 8 18446744073709551615 2 h3 258 8 258 10 25 1 = 258 11 258 12 18446744073709551615 2 in 258 13 258 15 29 2 -> 258 15 258 17 18446744073709551615 2 h3 258 17 258 19 25 1 ; 258 19 258 20 18446744073709551615 3 out 259 3 259 6 28 2 -> 259 6 259 8 18446744073709551615 2 h4 259 8 259 10 26 1 = 259 11 259 12 18446744073709551615 2 in 259 13 259 15 29 2 -> 259 15 259 17 18446744073709551615 2 h4 259 17 259 19 26 1 ; 259 19 259 20 18446744073709551615 1 } 260 1 260 2 18446744073709551615 6 static 262 1 262 7 18446744073709551615 6 inline 262 8 262 14 18446744073709551615 4 void 262 15 262 19 18446744073709551615 8 sha1_xor 262 20 262 28 30 1 ( 262 28 262 29 30 7 SHA_CTX 262 29 262 36 19 1 * 262 37 262 38 18446744073709551615 8 restrict 262 38 262 46 18446744073709551615 3 out 262 47 262 50 31 1 , 262 50 262 51 30 5 const 262 52 262 57 18446744073709551615 7 SHA_CTX 262 58 262 65 19 1 * 262 66 262 67 18446744073709551615 8 restrict 262 67 262 75 18446744073709551615 2 in 262 76 262 78 32 1 ) 262 78 262 79 30 1 { 263 1 263 2 18446744073709551615 3 out 264 3 264 6 31 2 -> 264 6 264 8 18446744073709551615 2 h0 264 8 264 10 22 2 ^= 264 11 264 13 18446744073709551615 2 in 264 14 264 16 32 2 -> 264 16 264 18 18446744073709551615 2 h0 264 18 264 20 22 1 ; 264 20 264 21 18446744073709551615 3 out 265 3 265 6 31 2 -> 265 6 265 8 18446744073709551615 2 h1 265 8 265 10 23 2 ^= 265 11 265 13 18446744073709551615 2 in 265 14 265 16 32 2 -> 265 16 265 18 18446744073709551615 2 h1 265 18 265 20 23 1 ; 265 20 265 21 18446744073709551615 3 out 266 3 266 6 31 2 -> 266 6 266 8 18446744073709551615 2 h2 266 8 266 10 24 2 ^= 266 11 266 13 18446744073709551615 2 in 266 14 266 16 32 2 -> 266 16 266 18 18446744073709551615 2 h2 266 18 266 20 24 1 ; 266 20 266 21 18446744073709551615 3 out 267 3 267 6 31 2 -> 267 6 267 8 18446744073709551615 2 h3 267 8 267 10 25 2 ^= 267 11 267 13 18446744073709551615 2 in 267 14 267 16 32 2 -> 267 16 267 18 18446744073709551615 2 h3 267 18 267 20 25 1 ; 267 20 267 21 18446744073709551615 3 out 268 3 268 6 31 2 -> 268 6 268 8 18446744073709551615 2 h4 268 8 268 10 26 2 ^= 268 11 268 13 18446744073709551615 2 in 268 14 268 16 32 2 -> 268 16 268 18 18446744073709551615 2 h4 268 18 268 20 26 1 ; 268 20 268 21 18446744073709551615 1 } 269 1 269 2 18446744073709551615 11 DECL_PBKDF2 271 1 271 12 18446744073709551615 1 ( 271 12 271 13 18446744073709551615 4 sha1 271 13 271 17 18446744073709551615 1 , 271 17 271 18 18446744073709551615 10 SHA_CBLOCK 272 13 272 23 18446744073709551615 1 , 272 23 272 24 18446744073709551615 17 SHA_DIGEST_LENGTH 273 13 273 30 18446744073709551615 1 , 273 30 273 31 18446744073709551615 7 SHA_CTX 274 13 274 20 18446744073709551615 1 , 274 20 274 21 18446744073709551615 9 SHA1_Init 275 13 275 22 18446744073709551615 1 , 275 22 275 23 18446744073709551615 11 SHA1_Update 276 13 276 24 18446744073709551615 1 , 276 24 276 25 18446744073709551615 14 SHA1_Transform 277 13 277 27 18446744073709551615 1 , 277 27 277 28 18446744073709551615 10 SHA1_Final 278 13 278 23 18446744073709551615 1 , 278 23 278 24 18446744073709551615 8 sha1_cpy 279 13 279 21 18446744073709551615 1 , 279 21 279 22 18446744073709551615 12 sha1_extract 280 13 280 25 18446744073709551615 1 , 280 25 280 26 18446744073709551615 8 sha1_xor 281 13 281 21 18446744073709551615 1 ) 281 21 281 22 18446744073709551615 6 static 283 1 283 7 18446744073709551615 6 inline 283 8 283 14 18446744073709551615 4 void 283 15 283 19 18446744073709551615 14 sha256_extract 283 20 283 34 33 1 ( 283 34 283 35 33 10 SHA256_CTX 283 35 283 45 34 1 * 283 46 283 47 18446744073709551615 8 restrict 283 47 283 55 18446744073709551615 3 ctx 283 56 283 59 35 1 , 283 59 283 60 33 7 uint8_t 283 61 283 68 3 1 * 283 69 283 70 18446744073709551615 8 restrict 283 70 283 78 18446744073709551615 3 out 283 79 283 82 36 1 ) 283 82 283 83 33 1 { 284 1 284 2 18446744073709551615 10 write32_be 285 3 285 13 0 1 ( 285 13 285 14 0 3 ctx 285 14 285 17 35 2 -> 285 17 285 19 18446744073709551615 1 h 285 19 285 20 37 1 [ 285 20 285 21 18446744073709551615 1 0 285 21 285 22 18446744073709551615 1 ] 285 22 285 23 18446744073709551615 1 , 285 23 285 24 0 3 out 285 25 285 28 36 1 ) 285 28 285 29 0 1 ; 285 29 285 30 18446744073709551615 10 write32_be 286 3 286 13 0 1 ( 286 13 286 14 0 3 ctx 286 14 286 17 35 2 -> 286 17 286 19 18446744073709551615 1 h 286 19 286 20 37 1 [ 286 20 286 21 18446744073709551615 1 1 286 21 286 22 18446744073709551615 1 ] 286 22 286 23 18446744073709551615 1 , 286 23 286 24 0 3 out 286 25 286 28 36 1 + 286 29 286 30 18446744073709551615 1 4 286 31 286 32 18446744073709551615 1 ) 286 32 286 33 0 1 ; 286 33 286 34 18446744073709551615 10 write32_be 287 3 287 13 0 1 ( 287 13 287 14 0 3 ctx 287 14 287 17 35 2 -> 287 17 287 19 18446744073709551615 1 h 287 19 287 20 37 1 [ 287 20 287 21 18446744073709551615 1 2 287 21 287 22 18446744073709551615 1 ] 287 22 287 23 18446744073709551615 1 , 287 23 287 24 0 3 out 287 25 287 28 36 1 + 287 29 287 30 18446744073709551615 1 8 287 31 287 32 18446744073709551615 1 ) 287 32 287 33 0 1 ; 287 33 287 34 18446744073709551615 10 write32_be 288 3 288 13 0 1 ( 288 13 288 14 0 3 ctx 288 14 288 17 35 2 -> 288 17 288 19 18446744073709551615 1 h 288 19 288 20 37 1 [ 288 20 288 21 18446744073709551615 1 3 288 21 288 22 18446744073709551615 1 ] 288 22 288 23 18446744073709551615 1 , 288 23 288 24 0 3 out 288 25 288 28 36 1 + 288 29 288 30 18446744073709551615 2 12 288 31 288 33 18446744073709551615 1 ) 288 33 288 34 0 1 ; 288 34 288 35 18446744073709551615 10 write32_be 289 3 289 13 0 1 ( 289 13 289 14 0 3 ctx 289 14 289 17 35 2 -> 289 17 289 19 18446744073709551615 1 h 289 19 289 20 37 1 [ 289 20 289 21 18446744073709551615 1 4 289 21 289 22 18446744073709551615 1 ] 289 22 289 23 18446744073709551615 1 , 289 23 289 24 0 3 out 289 25 289 28 36 1 + 289 29 289 30 18446744073709551615 2 16 289 31 289 33 18446744073709551615 1 ) 289 33 289 34 0 1 ; 289 34 289 35 18446744073709551615 10 write32_be 290 3 290 13 0 1 ( 290 13 290 14 0 3 ctx 290 14 290 17 35 2 -> 290 17 290 19 18446744073709551615 1 h 290 19 290 20 37 1 [ 290 20 290 21 18446744073709551615 1 5 290 21 290 22 18446744073709551615 1 ] 290 22 290 23 18446744073709551615 1 , 290 23 290 24 0 3 out 290 25 290 28 36 1 + 290 29 290 30 18446744073709551615 2 20 290 31 290 33 18446744073709551615 1 ) 290 33 290 34 0 1 ; 290 34 290 35 18446744073709551615 10 write32_be 291 3 291 13 0 1 ( 291 13 291 14 0 3 ctx 291 14 291 17 35 2 -> 291 17 291 19 18446744073709551615 1 h 291 19 291 20 37 1 [ 291 20 291 21 18446744073709551615 1 6 291 21 291 22 18446744073709551615 1 ] 291 22 291 23 18446744073709551615 1 , 291 23 291 24 0 3 out 291 25 291 28 36 1 + 291 29 291 30 18446744073709551615 2 24 291 31 291 33 18446744073709551615 1 ) 291 33 291 34 0 1 ; 291 34 291 35 18446744073709551615 10 write32_be 292 3 292 13 0 1 ( 292 13 292 14 0 3 ctx 292 14 292 17 35 2 -> 292 17 292 19 18446744073709551615 1 h 292 19 292 20 37 1 [ 292 20 292 21 18446744073709551615 1 7 292 21 292 22 18446744073709551615 1 ] 292 22 292 23 18446744073709551615 1 , 292 23 292 24 0 3 out 292 25 292 28 36 1 + 292 29 292 30 18446744073709551615 2 28 292 31 292 33 18446744073709551615 1 ) 292 33 292 34 0 1 ; 292 34 292 35 18446744073709551615 1 } 293 1 293 2 18446744073709551615 6 static 295 1 295 7 18446744073709551615 6 inline 295 8 295 14 18446744073709551615 4 void 295 15 295 19 18446744073709551615 10 sha256_cpy 295 20 295 30 38 1 ( 295 30 295 31 38 10 SHA256_CTX 295 31 295 41 34 1 * 295 42 295 43 18446744073709551615 8 restrict 295 43 295 51 18446744073709551615 3 out 295 52 295 55 39 1 , 295 55 295 56 38 5 const 295 57 295 62 18446744073709551615 10 SHA256_CTX 295 63 295 73 34 1 * 295 74 295 75 18446744073709551615 8 restrict 295 75 295 83 18446744073709551615 2 in 295 84 295 86 40 1 ) 295 86 295 87 38 1 { 296 1 296 2 18446744073709551615 3 out 297 3 297 6 39 2 -> 297 6 297 8 18446744073709551615 1 h 297 8 297 9 37 1 [ 297 9 297 10 18446744073709551615 1 0 297 10 297 11 18446744073709551615 1 ] 297 11 297 12 18446744073709551615 1 = 297 13 297 14 18446744073709551615 2 in 297 15 297 17 40 2 -> 297 17 297 19 18446744073709551615 1 h 297 19 297 20 37 1 [ 297 20 297 21 18446744073709551615 1 0 297 21 297 22 18446744073709551615 1 ] 297 22 297 23 18446744073709551615 1 ; 297 23 297 24 18446744073709551615 3 out 298 3 298 6 39 2 -> 298 6 298 8 18446744073709551615 1 h 298 8 298 9 37 1 [ 298 9 298 10 18446744073709551615 1 1 298 10 298 11 18446744073709551615 1 ] 298 11 298 12 18446744073709551615 1 = 298 13 298 14 18446744073709551615 2 in 298 15 298 17 40 2 -> 298 17 298 19 18446744073709551615 1 h 298 19 298 20 37 1 [ 298 20 298 21 18446744073709551615 1 1 298 21 298 22 18446744073709551615 1 ] 298 22 298 23 18446744073709551615 1 ; 298 23 298 24 18446744073709551615 3 out 299 3 299 6 39 2 -> 299 6 299 8 18446744073709551615 1 h 299 8 299 9 37 1 [ 299 9 299 10 18446744073709551615 1 2 299 10 299 11 18446744073709551615 1 ] 299 11 299 12 18446744073709551615 1 = 299 13 299 14 18446744073709551615 2 in 299 15 299 17 40 2 -> 299 17 299 19 18446744073709551615 1 h 299 19 299 20 37 1 [ 299 20 299 21 18446744073709551615 1 2 299 21 299 22 18446744073709551615 1 ] 299 22 299 23 18446744073709551615 1 ; 299 23 299 24 18446744073709551615 3 out 300 3 300 6 39 2 -> 300 6 300 8 18446744073709551615 1 h 300 8 300 9 37 1 [ 300 9 300 10 18446744073709551615 1 3 300 10 300 11 18446744073709551615 1 ] 300 11 300 12 18446744073709551615 1 = 300 13 300 14 18446744073709551615 2 in 300 15 300 17 40 2 -> 300 17 300 19 18446744073709551615 1 h 300 19 300 20 37 1 [ 300 20 300 21 18446744073709551615 1 3 300 21 300 22 18446744073709551615 1 ] 300 22 300 23 18446744073709551615 1 ; 300 23 300 24 18446744073709551615 3 out 301 3 301 6 39 2 -> 301 6 301 8 18446744073709551615 1 h 301 8 301 9 37 1 [ 301 9 301 10 18446744073709551615 1 4 301 10 301 11 18446744073709551615 1 ] 301 11 301 12 18446744073709551615 1 = 301 13 301 14 18446744073709551615 2 in 301 15 301 17 40 2 -> 301 17 301 19 18446744073709551615 1 h 301 19 301 20 37 1 [ 301 20 301 21 18446744073709551615 1 4 301 21 301 22 18446744073709551615 1 ] 301 22 301 23 18446744073709551615 1 ; 301 23 301 24 18446744073709551615 3 out 302 3 302 6 39 2 -> 302 6 302 8 18446744073709551615 1 h 302 8 302 9 37 1 [ 302 9 302 10 18446744073709551615 1 5 302 10 302 11 18446744073709551615 1 ] 302 11 302 12 18446744073709551615 1 = 302 13 302 14 18446744073709551615 2 in 302 15 302 17 40 2 -> 302 17 302 19 18446744073709551615 1 h 302 19 302 20 37 1 [ 302 20 302 21 18446744073709551615 1 5 302 21 302 22 18446744073709551615 1 ] 302 22 302 23 18446744073709551615 1 ; 302 23 302 24 18446744073709551615 3 out 303 3 303 6 39 2 -> 303 6 303 8 18446744073709551615 1 h 303 8 303 9 37 1 [ 303 9 303 10 18446744073709551615 1 6 303 10 303 11 18446744073709551615 1 ] 303 11 303 12 18446744073709551615 1 = 303 13 303 14 18446744073709551615 2 in 303 15 303 17 40 2 -> 303 17 303 19 18446744073709551615 1 h 303 19 303 20 37 1 [ 303 20 303 21 18446744073709551615 1 6 303 21 303 22 18446744073709551615 1 ] 303 22 303 23 18446744073709551615 1 ; 303 23 303 24 18446744073709551615 3 out 304 3 304 6 39 2 -> 304 6 304 8 18446744073709551615 1 h 304 8 304 9 37 1 [ 304 9 304 10 18446744073709551615 1 7 304 10 304 11 18446744073709551615 1 ] 304 11 304 12 18446744073709551615 1 = 304 13 304 14 18446744073709551615 2 in 304 15 304 17 40 2 -> 304 17 304 19 18446744073709551615 1 h 304 19 304 20 37 1 [ 304 20 304 21 18446744073709551615 1 7 304 21 304 22 18446744073709551615 1 ] 304 22 304 23 18446744073709551615 1 ; 304 23 304 24 18446744073709551615 1 } 305 1 305 2 18446744073709551615 6 static 307 1 307 7 18446744073709551615 6 inline 307 8 307 14 18446744073709551615 4 void 307 15 307 19 18446744073709551615 10 sha256_xor 307 20 307 30 41 1 ( 307 30 307 31 41 10 SHA256_CTX 307 31 307 41 34 1 * 307 42 307 43 18446744073709551615 8 restrict 307 43 307 51 18446744073709551615 3 out 307 52 307 55 42 1 , 307 55 307 56 41 5 const 307 57 307 62 18446744073709551615 10 SHA256_CTX 307 63 307 73 34 1 * 307 74 307 75 18446744073709551615 8 restrict 307 75 307 83 18446744073709551615 2 in 307 84 307 86 43 1 ) 307 86 307 87 41 1 { 308 1 308 2 18446744073709551615 3 out 309 3 309 6 42 2 -> 309 6 309 8 18446744073709551615 1 h 309 8 309 9 37 1 [ 309 9 309 10 18446744073709551615 1 0 309 10 309 11 18446744073709551615 1 ] 309 11 309 12 18446744073709551615 2 ^= 309 13 309 15 18446744073709551615 2 in 309 16 309 18 43 2 -> 309 18 309 20 18446744073709551615 1 h 309 20 309 21 37 1 [ 309 21 309 22 18446744073709551615 1 0 309 22 309 23 18446744073709551615 1 ] 309 23 309 24 18446744073709551615 1 ; 309 24 309 25 18446744073709551615 3 out 310 3 310 6 42 2 -> 310 6 310 8 18446744073709551615 1 h 310 8 310 9 37 1 [ 310 9 310 10 18446744073709551615 1 1 310 10 310 11 18446744073709551615 1 ] 310 11 310 12 18446744073709551615 2 ^= 310 13 310 15 18446744073709551615 2 in 310 16 310 18 43 2 -> 310 18 310 20 18446744073709551615 1 h 310 20 310 21 37 1 [ 310 21 310 22 18446744073709551615 1 1 310 22 310 23 18446744073709551615 1 ] 310 23 310 24 18446744073709551615 1 ; 310 24 310 25 18446744073709551615 3 out 311 3 311 6 42 2 -> 311 6 311 8 18446744073709551615 1 h 311 8 311 9 37 1 [ 311 9 311 10 18446744073709551615 1 2 311 10 311 11 18446744073709551615 1 ] 311 11 311 12 18446744073709551615 2 ^= 311 13 311 15 18446744073709551615 2 in 311 16 311 18 43 2 -> 311 18 311 20 18446744073709551615 1 h 311 20 311 21 37 1 [ 311 21 311 22 18446744073709551615 1 2 311 22 311 23 18446744073709551615 1 ] 311 23 311 24 18446744073709551615 1 ; 311 24 311 25 18446744073709551615 3 out 312 3 312 6 42 2 -> 312 6 312 8 18446744073709551615 1 h 312 8 312 9 37 1 [ 312 9 312 10 18446744073709551615 1 3 312 10 312 11 18446744073709551615 1 ] 312 11 312 12 18446744073709551615 2 ^= 312 13 312 15 18446744073709551615 2 in 312 16 312 18 43 2 -> 312 18 312 20 18446744073709551615 1 h 312 20 312 21 37 1 [ 312 21 312 22 18446744073709551615 1 3 312 22 312 23 18446744073709551615 1 ] 312 23 312 24 18446744073709551615 1 ; 312 24 312 25 18446744073709551615 3 out 313 3 313 6 42 2 -> 313 6 313 8 18446744073709551615 1 h 313 8 313 9 37 1 [ 313 9 313 10 18446744073709551615 1 4 313 10 313 11 18446744073709551615 1 ] 313 11 313 12 18446744073709551615 2 ^= 313 13 313 15 18446744073709551615 2 in 313 16 313 18 43 2 -> 313 18 313 20 18446744073709551615 1 h 313 20 313 21 37 1 [ 313 21 313 22 18446744073709551615 1 4 313 22 313 23 18446744073709551615 1 ] 313 23 313 24 18446744073709551615 1 ; 313 24 313 25 18446744073709551615 3 out 314 3 314 6 42 2 -> 314 6 314 8 18446744073709551615 1 h 314 8 314 9 37 1 [ 314 9 314 10 18446744073709551615 1 5 314 10 314 11 18446744073709551615 1 ] 314 11 314 12 18446744073709551615 2 ^= 314 13 314 15 18446744073709551615 2 in 314 16 314 18 43 2 -> 314 18 314 20 18446744073709551615 1 h 314 20 314 21 37 1 [ 314 21 314 22 18446744073709551615 1 5 314 22 314 23 18446744073709551615 1 ] 314 23 314 24 18446744073709551615 1 ; 314 24 314 25 18446744073709551615 3 out 315 3 315 6 42 2 -> 315 6 315 8 18446744073709551615 1 h 315 8 315 9 37 1 [ 315 9 315 10 18446744073709551615 1 6 315 10 315 11 18446744073709551615 1 ] 315 11 315 12 18446744073709551615 2 ^= 315 13 315 15 18446744073709551615 2 in 315 16 315 18 43 2 -> 315 18 315 20 18446744073709551615 1 h 315 20 315 21 37 1 [ 315 21 315 22 18446744073709551615 1 6 315 22 315 23 18446744073709551615 1 ] 315 23 315 24 18446744073709551615 1 ; 315 24 315 25 18446744073709551615 3 out 316 3 316 6 42 2 -> 316 6 316 8 18446744073709551615 1 h 316 8 316 9 37 1 [ 316 9 316 10 18446744073709551615 1 7 316 10 316 11 18446744073709551615 1 ] 316 11 316 12 18446744073709551615 2 ^= 316 13 316 15 18446744073709551615 2 in 316 16 316 18 43 2 -> 316 18 316 20 18446744073709551615 1 h 316 20 316 21 37 1 [ 316 21 316 22 18446744073709551615 1 7 316 22 316 23 18446744073709551615 1 ] 316 23 316 24 18446744073709551615 1 ; 316 24 316 25 18446744073709551615 1 } 317 1 317 2 18446744073709551615 11 DECL_PBKDF2 319 1 319 12 18446744073709551615 1 ( 319 12 319 13 18446744073709551615 6 sha256 319 13 319 19 18446744073709551615 1 , 319 19 319 20 18446744073709551615 13 SHA256_CBLOCK 320 13 320 26 18446744073709551615 1 , 320 26 320 27 18446744073709551615 20 SHA256_DIGEST_LENGTH 321 13 321 33 18446744073709551615 1 , 321 33 321 34 18446744073709551615 10 SHA256_CTX 322 13 322 23 18446744073709551615 1 , 322 23 322 24 18446744073709551615 11 SHA256_Init 323 13 323 24 18446744073709551615 1 , 323 24 323 25 18446744073709551615 13 SHA256_Update 324 13 324 26 18446744073709551615 1 , 324 26 324 27 18446744073709551615 16 SHA256_Transform 325 13 325 29 18446744073709551615 1 , 325 29 325 30 18446744073709551615 12 SHA256_Final 326 13 326 25 18446744073709551615 1 , 326 25 326 26 18446744073709551615 10 sha256_cpy 327 13 327 23 18446744073709551615 1 , 327 23 327 24 18446744073709551615 14 sha256_extract 328 13 328 27 18446744073709551615 1 , 328 27 328 28 18446744073709551615 10 sha256_xor 329 13 329 23 18446744073709551615 1 ) 329 23 329 24 18446744073709551615 6 static 331 1 331 7 18446744073709551615 6 inline 331 8 331 14 18446744073709551615 4 void 331 15 331 19 18446744073709551615 14 sha512_extract 331 20 331 34 44 1 ( 331 34 331 35 44 10 SHA512_CTX 331 35 331 45 45 1 * 331 46 331 47 18446744073709551615 8 restrict 331 47 331 55 18446744073709551615 3 ctx 331 56 331 59 46 1 , 331 59 331 60 44 7 uint8_t 331 61 331 68 3 1 * 331 69 331 70 18446744073709551615 8 restrict 331 70 331 78 18446744073709551615 3 out 331 79 331 82 47 1 ) 331 82 331 83 44 1 { 332 1 332 2 18446744073709551615 10 write64_be 333 3 333 13 6 1 ( 333 13 333 14 6 3 ctx 333 14 333 17 46 2 -> 333 17 333 19 18446744073709551615 1 h 333 19 333 20 48 1 [ 333 20 333 21 18446744073709551615 1 0 333 21 333 22 18446744073709551615 1 ] 333 22 333 23 18446744073709551615 1 , 333 23 333 24 6 3 out 333 25 333 28 47 1 ) 333 28 333 29 6 1 ; 333 29 333 30 18446744073709551615 10 write64_be 334 3 334 13 6 1 ( 334 13 334 14 6 3 ctx 334 14 334 17 46 2 -> 334 17 334 19 18446744073709551615 1 h 334 19 334 20 48 1 [ 334 20 334 21 18446744073709551615 1 1 334 21 334 22 18446744073709551615 1 ] 334 22 334 23 18446744073709551615 1 , 334 23 334 24 6 3 out 334 25 334 28 47 1 + 334 29 334 30 18446744073709551615 1 8 334 31 334 32 18446744073709551615 1 ) 334 32 334 33 6 1 ; 334 33 334 34 18446744073709551615 10 write64_be 335 3 335 13 6 1 ( 335 13 335 14 6 3 ctx 335 14 335 17 46 2 -> 335 17 335 19 18446744073709551615 1 h 335 19 335 20 48 1 [ 335 20 335 21 18446744073709551615 1 2 335 21 335 22 18446744073709551615 1 ] 335 22 335 23 18446744073709551615 1 , 335 23 335 24 6 3 out 335 25 335 28 47 1 + 335 29 335 30 18446744073709551615 2 16 335 31 335 33 18446744073709551615 1 ) 335 33 335 34 6 1 ; 335 34 335 35 18446744073709551615 10 write64_be 336 3 336 13 6 1 ( 336 13 336 14 6 3 ctx 336 14 336 17 46 2 -> 336 17 336 19 18446744073709551615 1 h 336 19 336 20 48 1 [ 336 20 336 21 18446744073709551615 1 3 336 21 336 22 18446744073709551615 1 ] 336 22 336 23 18446744073709551615 1 , 336 23 336 24 6 3 out 336 25 336 28 47 1 + 336 29 336 30 18446744073709551615 2 24 336 31 336 33 18446744073709551615 1 ) 336 33 336 34 6 1 ; 336 34 336 35 18446744073709551615 10 write64_be 337 3 337 13 6 1 ( 337 13 337 14 6 3 ctx 337 14 337 17 46 2 -> 337 17 337 19 18446744073709551615 1 h 337 19 337 20 48 1 [ 337 20 337 21 18446744073709551615 1 4 337 21 337 22 18446744073709551615 1 ] 337 22 337 23 18446744073709551615 1 , 337 23 337 24 6 3 out 337 25 337 28 47 1 + 337 29 337 30 18446744073709551615 2 32 337 31 337 33 18446744073709551615 1 ) 337 33 337 34 6 1 ; 337 34 337 35 18446744073709551615 10 write64_be 338 3 338 13 6 1 ( 338 13 338 14 6 3 ctx 338 14 338 17 46 2 -> 338 17 338 19 18446744073709551615 1 h 338 19 338 20 48 1 [ 338 20 338 21 18446744073709551615 1 5 338 21 338 22 18446744073709551615 1 ] 338 22 338 23 18446744073709551615 1 , 338 23 338 24 6 3 out 338 25 338 28 47 1 + 338 29 338 30 18446744073709551615 2 40 338 31 338 33 18446744073709551615 1 ) 338 33 338 34 6 1 ; 338 34 338 35 18446744073709551615 10 write64_be 339 3 339 13 6 1 ( 339 13 339 14 6 3 ctx 339 14 339 17 46 2 -> 339 17 339 19 18446744073709551615 1 h 339 19 339 20 48 1 [ 339 20 339 21 18446744073709551615 1 6 339 21 339 22 18446744073709551615 1 ] 339 22 339 23 18446744073709551615 1 , 339 23 339 24 6 3 out 339 25 339 28 47 1 + 339 29 339 30 18446744073709551615 2 48 339 31 339 33 18446744073709551615 1 ) 339 33 339 34 6 1 ; 339 34 339 35 18446744073709551615 10 write64_be 340 3 340 13 6 1 ( 340 13 340 14 6 3 ctx 340 14 340 17 46 2 -> 340 17 340 19 18446744073709551615 1 h 340 19 340 20 48 1 [ 340 20 340 21 18446744073709551615 1 7 340 21 340 22 18446744073709551615 1 ] 340 22 340 23 18446744073709551615 1 , 340 23 340 24 6 3 out 340 25 340 28 47 1 + 340 29 340 30 18446744073709551615 2 56 340 31 340 33 18446744073709551615 1 ) 340 33 340 34 6 1 ; 340 34 340 35 18446744073709551615 1 } 341 1 341 2 18446744073709551615 6 static 343 1 343 7 18446744073709551615 6 inline 343 8 343 14 18446744073709551615 4 void 343 15 343 19 18446744073709551615 10 sha512_cpy 343 20 343 30 49 1 ( 343 30 343 31 49 10 SHA512_CTX 343 31 343 41 45 1 * 343 42 343 43 18446744073709551615 8 restrict 343 43 343 51 18446744073709551615 3 out 343 52 343 55 50 1 , 343 55 343 56 49 5 const 343 57 343 62 18446744073709551615 10 SHA512_CTX 343 63 343 73 45 1 * 343 74 343 75 18446744073709551615 8 restrict 343 75 343 83 18446744073709551615 2 in 343 84 343 86 51 1 ) 343 86 343 87 49 1 { 344 1 344 2 18446744073709551615 3 out 345 3 345 6 50 2 -> 345 6 345 8 18446744073709551615 1 h 345 8 345 9 48 1 [ 345 9 345 10 18446744073709551615 1 0 345 10 345 11 18446744073709551615 1 ] 345 11 345 12 18446744073709551615 1 = 345 13 345 14 18446744073709551615 2 in 345 15 345 17 51 2 -> 345 17 345 19 18446744073709551615 1 h 345 19 345 20 48 1 [ 345 20 345 21 18446744073709551615 1 0 345 21 345 22 18446744073709551615 1 ] 345 22 345 23 18446744073709551615 1 ; 345 23 345 24 18446744073709551615 3 out 346 3 346 6 50 2 -> 346 6 346 8 18446744073709551615 1 h 346 8 346 9 48 1 [ 346 9 346 10 18446744073709551615 1 1 346 10 346 11 18446744073709551615 1 ] 346 11 346 12 18446744073709551615 1 = 346 13 346 14 18446744073709551615 2 in 346 15 346 17 51 2 -> 346 17 346 19 18446744073709551615 1 h 346 19 346 20 48 1 [ 346 20 346 21 18446744073709551615 1 1 346 21 346 22 18446744073709551615 1 ] 346 22 346 23 18446744073709551615 1 ; 346 23 346 24 18446744073709551615 3 out 347 3 347 6 50 2 -> 347 6 347 8 18446744073709551615 1 h 347 8 347 9 48 1 [ 347 9 347 10 18446744073709551615 1 2 347 10 347 11 18446744073709551615 1 ] 347 11 347 12 18446744073709551615 1 = 347 13 347 14 18446744073709551615 2 in 347 15 347 17 51 2 -> 347 17 347 19 18446744073709551615 1 h 347 19 347 20 48 1 [ 347 20 347 21 18446744073709551615 1 2 347 21 347 22 18446744073709551615 1 ] 347 22 347 23 18446744073709551615 1 ; 347 23 347 24 18446744073709551615 3 out 348 3 348 6 50 2 -> 348 6 348 8 18446744073709551615 1 h 348 8 348 9 48 1 [ 348 9 348 10 18446744073709551615 1 3 348 10 348 11 18446744073709551615 1 ] 348 11 348 12 18446744073709551615 1 = 348 13 348 14 18446744073709551615 2 in 348 15 348 17 51 2 -> 348 17 348 19 18446744073709551615 1 h 348 19 348 20 48 1 [ 348 20 348 21 18446744073709551615 1 3 348 21 348 22 18446744073709551615 1 ] 348 22 348 23 18446744073709551615 1 ; 348 23 348 24 18446744073709551615 3 out 349 3 349 6 50 2 -> 349 6 349 8 18446744073709551615 1 h 349 8 349 9 48 1 [ 349 9 349 10 18446744073709551615 1 4 349 10 349 11 18446744073709551615 1 ] 349 11 349 12 18446744073709551615 1 = 349 13 349 14 18446744073709551615 2 in 349 15 349 17 51 2 -> 349 17 349 19 18446744073709551615 1 h 349 19 349 20 48 1 [ 349 20 349 21 18446744073709551615 1 4 349 21 349 22 18446744073709551615 1 ] 349 22 349 23 18446744073709551615 1 ; 349 23 349 24 18446744073709551615 3 out 350 3 350 6 50 2 -> 350 6 350 8 18446744073709551615 1 h 350 8 350 9 48 1 [ 350 9 350 10 18446744073709551615 1 5 350 10 350 11 18446744073709551615 1 ] 350 11 350 12 18446744073709551615 1 = 350 13 350 14 18446744073709551615 2 in 350 15 350 17 51 2 -> 350 17 350 19 18446744073709551615 1 h 350 19 350 20 48 1 [ 350 20 350 21 18446744073709551615 1 5 350 21 350 22 18446744073709551615 1 ] 350 22 350 23 18446744073709551615 1 ; 350 23 350 24 18446744073709551615 3 out 351 3 351 6 50 2 -> 351 6 351 8 18446744073709551615 1 h 351 8 351 9 48 1 [ 351 9 351 10 18446744073709551615 1 6 351 10 351 11 18446744073709551615 1 ] 351 11 351 12 18446744073709551615 1 = 351 13 351 14 18446744073709551615 2 in 351 15 351 17 51 2 -> 351 17 351 19 18446744073709551615 1 h 351 19 351 20 48 1 [ 351 20 351 21 18446744073709551615 1 6 351 21 351 22 18446744073709551615 1 ] 351 22 351 23 18446744073709551615 1 ; 351 23 351 24 18446744073709551615 3 out 352 3 352 6 50 2 -> 352 6 352 8 18446744073709551615 1 h 352 8 352 9 48 1 [ 352 9 352 10 18446744073709551615 1 7 352 10 352 11 18446744073709551615 1 ] 352 11 352 12 18446744073709551615 1 = 352 13 352 14 18446744073709551615 2 in 352 15 352 17 51 2 -> 352 17 352 19 18446744073709551615 1 h 352 19 352 20 48 1 [ 352 20 352 21 18446744073709551615 1 7 352 21 352 22 18446744073709551615 1 ] 352 22 352 23 18446744073709551615 1 ; 352 23 352 24 18446744073709551615 1 } 353 1 353 2 18446744073709551615 6 static 355 1 355 7 18446744073709551615 6 inline 355 8 355 14 18446744073709551615 4 void 355 15 355 19 18446744073709551615 10 sha512_xor 355 20 355 30 52 1 ( 355 30 355 31 52 10 SHA512_CTX 355 31 355 41 45 1 * 355 42 355 43 18446744073709551615 8 restrict 355 43 355 51 18446744073709551615 3 out 355 52 355 55 53 1 , 355 55 355 56 52 5 const 355 57 355 62 18446744073709551615 10 SHA512_CTX 355 63 355 73 45 1 * 355 74 355 75 18446744073709551615 8 restrict 355 75 355 83 18446744073709551615 2 in 355 84 355 86 54 1 ) 355 86 355 87 52 1 { 356 1 356 2 18446744073709551615 3 out 357 3 357 6 53 2 -> 357 6 357 8 18446744073709551615 1 h 357 8 357 9 48 1 [ 357 9 357 10 18446744073709551615 1 0 357 10 357 11 18446744073709551615 1 ] 357 11 357 12 18446744073709551615 2 ^= 357 13 357 15 18446744073709551615 2 in 357 16 357 18 54 2 -> 357 18 357 20 18446744073709551615 1 h 357 20 357 21 48 1 [ 357 21 357 22 18446744073709551615 1 0 357 22 357 23 18446744073709551615 1 ] 357 23 357 24 18446744073709551615 1 ; 357 24 357 25 18446744073709551615 3 out 358 3 358 6 53 2 -> 358 6 358 8 18446744073709551615 1 h 358 8 358 9 48 1 [ 358 9 358 10 18446744073709551615 1 1 358 10 358 11 18446744073709551615 1 ] 358 11 358 12 18446744073709551615 2 ^= 358 13 358 15 18446744073709551615 2 in 358 16 358 18 54 2 -> 358 18 358 20 18446744073709551615 1 h 358 20 358 21 48 1 [ 358 21 358 22 18446744073709551615 1 1 358 22 358 23 18446744073709551615 1 ] 358 23 358 24 18446744073709551615 1 ; 358 24 358 25 18446744073709551615 3 out 359 3 359 6 53 2 -> 359 6 359 8 18446744073709551615 1 h 359 8 359 9 48 1 [ 359 9 359 10 18446744073709551615 1 2 359 10 359 11 18446744073709551615 1 ] 359 11 359 12 18446744073709551615 2 ^= 359 13 359 15 18446744073709551615 2 in 359 16 359 18 54 2 -> 359 18 359 20 18446744073709551615 1 h 359 20 359 21 48 1 [ 359 21 359 22 18446744073709551615 1 2 359 22 359 23 18446744073709551615 1 ] 359 23 359 24 18446744073709551615 1 ; 359 24 359 25 18446744073709551615 3 out 360 3 360 6 53 2 -> 360 6 360 8 18446744073709551615 1 h 360 8 360 9 48 1 [ 360 9 360 10 18446744073709551615 1 3 360 10 360 11 18446744073709551615 1 ] 360 11 360 12 18446744073709551615 2 ^= 360 13 360 15 18446744073709551615 2 in 360 16 360 18 54 2 -> 360 18 360 20 18446744073709551615 1 h 360 20 360 21 48 1 [ 360 21 360 22 18446744073709551615 1 3 360 22 360 23 18446744073709551615 1 ] 360 23 360 24 18446744073709551615 1 ; 360 24 360 25 18446744073709551615 3 out 361 3 361 6 53 2 -> 361 6 361 8 18446744073709551615 1 h 361 8 361 9 48 1 [ 361 9 361 10 18446744073709551615 1 4 361 10 361 11 18446744073709551615 1 ] 361 11 361 12 18446744073709551615 2 ^= 361 13 361 15 18446744073709551615 2 in 361 16 361 18 54 2 -> 361 18 361 20 18446744073709551615 1 h 361 20 361 21 48 1 [ 361 21 361 22 18446744073709551615 1 4 361 22 361 23 18446744073709551615 1 ] 361 23 361 24 18446744073709551615 1 ; 361 24 361 25 18446744073709551615 3 out 362 3 362 6 53 2 -> 362 6 362 8 18446744073709551615 1 h 362 8 362 9 48 1 [ 362 9 362 10 18446744073709551615 1 5 362 10 362 11 18446744073709551615 1 ] 362 11 362 12 18446744073709551615 2 ^= 362 13 362 15 18446744073709551615 2 in 362 16 362 18 54 2 -> 362 18 362 20 18446744073709551615 1 h 362 20 362 21 48 1 [ 362 21 362 22 18446744073709551615 1 5 362 22 362 23 18446744073709551615 1 ] 362 23 362 24 18446744073709551615 1 ; 362 24 362 25 18446744073709551615 3 out 363 3 363 6 53 2 -> 363 6 363 8 18446744073709551615 1 h 363 8 363 9 48 1 [ 363 9 363 10 18446744073709551615 1 6 363 10 363 11 18446744073709551615 1 ] 363 11 363 12 18446744073709551615 2 ^= 363 13 363 15 18446744073709551615 2 in 363 16 363 18 54 2 -> 363 18 363 20 18446744073709551615 1 h 363 20 363 21 48 1 [ 363 21 363 22 18446744073709551615 1 6 363 22 363 23 18446744073709551615 1 ] 363 23 363 24 18446744073709551615 1 ; 363 24 363 25 18446744073709551615 3 out 364 3 364 6 53 2 -> 364 6 364 8 18446744073709551615 1 h 364 8 364 9 48 1 [ 364 9 364 10 18446744073709551615 1 7 364 10 364 11 18446744073709551615 1 ] 364 11 364 12 18446744073709551615 2 ^= 364 13 364 15 18446744073709551615 2 in 364 16 364 18 54 2 -> 364 18 364 20 18446744073709551615 1 h 364 20 364 21 48 1 [ 364 21 364 22 18446744073709551615 1 7 364 22 364 23 18446744073709551615 1 ] 364 23 364 24 18446744073709551615 1 ; 364 24 364 25 18446744073709551615 1 } 365 1 365 2 18446744073709551615 11 DECL_PBKDF2 367 1 367 12 18446744073709551615 1 ( 367 12 367 13 18446744073709551615 6 sha512 367 13 367 19 18446744073709551615 1 , 367 19 367 20 18446744073709551615 13 SHA512_CBLOCK 368 13 368 26 18446744073709551615 1 , 368 26 368 27 18446744073709551615 20 SHA512_DIGEST_LENGTH 369 13 369 33 18446744073709551615 1 , 369 33 369 34 18446744073709551615 10 SHA512_CTX 370 13 370 23 18446744073709551615 1 , 370 23 370 24 18446744073709551615 11 SHA512_Init 371 13 371 24 18446744073709551615 1 , 371 24 371 25 18446744073709551615 13 SHA512_Update 372 13 372 26 18446744073709551615 1 , 372 26 372 27 18446744073709551615 16 SHA512_Transform 373 13 373 29 18446744073709551615 1 , 373 29 373 30 18446744073709551615 12 SHA512_Final 374 13 374 25 18446744073709551615 1 , 374 25 374 26 18446744073709551615 10 sha512_cpy 375 13 375 23 18446744073709551615 1 , 375 23 375 24 18446744073709551615 14 sha512_extract 376 13 376 27 18446744073709551615 1 , 376 27 376 28 18446744073709551615 10 sha512_xor 377 13 377 23 18446744073709551615 1 ) 377 23 377 24 18446744073709551615 4 void 379 1 379 5 18446744073709551615 20 fastpbkdf2_hmac_sha1 379 6 379 26 55 1 ( 379 26 379 27 55 5 const 379 27 379 32 18446744073709551615 7 uint8_t 379 33 379 40 3 1 * 379 41 379 42 18446744073709551615 2 pw 379 42 379 44 56 1 , 379 44 379 45 55 6 size_t 379 46 379 52 13 3 npw 379 53 379 56 57 1 , 379 56 379 57 55 5 const 380 27 380 32 18446744073709551615 7 uint8_t 380 33 380 40 3 1 * 380 41 380 42 18446744073709551615 4 salt 380 42 380 46 58 1 , 380 46 380 47 55 6 size_t 380 48 380 54 13 5 nsalt 380 55 380 60 59 1 , 380 60 380 61 55 8 uint32_t 381 27 381 35 1 10 iterations 381 36 381 46 60 1 , 381 46 381 47 55 7 uint8_t 382 27 382 34 3 1 * 382 35 382 36 18446744073709551615 3 out 382 36 382 39 61 1 , 382 39 382 40 55 6 size_t 382 41 382 47 13 4 nout 382 48 382 52 62 1 ) 382 52 382 53 55 1 { 383 1 383 2 18446744073709551615 6 PBKDF2 384 3 384 9 18446744073709551615 1 ( 384 9 384 10 63 4 sha1 384 10 384 14 63 1 ) 384 14 384 15 63 1 ( 384 15 384 16 63 2 pw 384 16 384 18 56 1 , 384 18 384 19 63 3 npw 384 20 384 23 57 1 , 384 23 384 24 63 4 salt 384 25 384 29 58 1 , 384 29 384 30 63 5 nsalt 384 31 384 36 59 1 , 384 36 384 37 63 10 iterations 384 38 384 48 60 1 , 384 48 384 49 63 3 out 384 50 384 53 61 1 , 384 53 384 54 63 4 nout 384 55 384 59 62 1 ) 384 59 384 60 63 1 ; 384 60 384 61 18446744073709551615 1 } 385 1 385 2 18446744073709551615 4 void 387 1 387 5 18446744073709551615 22 fastpbkdf2_hmac_sha256 387 6 387 28 64 1 ( 387 28 387 29 64 5 const 387 29 387 34 18446744073709551615 7 uint8_t 387 35 387 42 3 1 * 387 43 387 44 18446744073709551615 2 pw 387 44 387 46 65 1 , 387 46 387 47 64 6 size_t 387 48 387 54 13 3 npw 387 55 387 58 66 1 , 387 58 387 59 64 5 const 388 29 388 34 18446744073709551615 7 uint8_t 388 35 388 42 3 1 * 388 43 388 44 18446744073709551615 4 salt 388 44 388 48 67 1 , 388 48 388 49 64 6 size_t 388 50 388 56 13 5 nsalt 388 57 388 62 68 1 , 388 62 388 63 64 8 uint32_t 389 29 389 37 1 10 iterations 389 38 389 48 69 1 , 389 48 389 49 64 7 uint8_t 390 29 390 36 3 1 * 390 37 390 38 18446744073709551615 3 out 390 38 390 41 70 1 , 390 41 390 42 64 6 size_t 390 43 390 49 13 4 nout 390 50 390 54 71 1 ) 390 54 390 55 64 1 { 391 1 391 2 18446744073709551615 6 PBKDF2 392 3 392 9 18446744073709551615 1 ( 392 9 392 10 72 6 sha256 392 10 392 16 72 1 ) 392 16 392 17 72 1 ( 392 17 392 18 72 2 pw 392 18 392 20 65 1 , 392 20 392 21 72 3 npw 392 22 392 25 66 1 , 392 25 392 26 72 4 salt 392 27 392 31 67 1 , 392 31 392 32 72 5 nsalt 392 33 392 38 68 1 , 392 38 392 39 72 10 iterations 392 40 392 50 69 1 , 392 50 392 51 72 3 out 392 52 392 55 70 1 , 392 55 392 56 72 4 nout 392 57 392 61 71 1 ) 392 61 392 62 72 1 ; 392 62 392 63 18446744073709551615 1 } 393 1 393 2 18446744073709551615 4 void 395 1 395 5 18446744073709551615 22 fastpbkdf2_hmac_sha512 395 6 395 28 73 1 ( 395 28 395 29 73 5 const 395 29 395 34 18446744073709551615 7 uint8_t 395 35 395 42 3 1 * 395 43 395 44 18446744073709551615 2 pw 395 44 395 46 74 1 , 395 46 395 47 73 6 size_t 395 48 395 54 13 3 npw 395 55 395 58 75 1 , 395 58 395 59 73 5 const 396 29 396 34 18446744073709551615 7 uint8_t 396 35 396 42 3 1 * 396 43 396 44 18446744073709551615 4 salt 396 44 396 48 76 1 , 396 48 396 49 73 6 size_t 396 50 396 56 13 5 nsalt 396 57 396 62 77 1 , 396 62 396 63 73 8 uint32_t 397 29 397 37 1 10 iterations 397 38 397 48 78 1 , 397 48 397 49 73 7 uint8_t 398 29 398 36 3 1 * 398 37 398 38 18446744073709551615 3 out 398 38 398 41 79 1 , 398 41 398 42 73 6 size_t 398 43 398 49 13 4 nout 398 50 398 54 80 1 ) 398 54 398 55 73 1 { 399 1 399 2 18446744073709551615 6 PBKDF2 400 3 400 9 18446744073709551615 1 ( 400 9 400 10 81 6 sha512 400 10 400 16 81 1 ) 400 16 400 17 81 1 ( 400 17 400 18 81 2 pw 400 18 400 20 74 1 , 400 20 400 21 81 3 npw 400 22 400 25 75 1 , 400 25 400 26 81 4 salt 400 27 400 31 76 1 , 400 31 400 32 81 5 nsalt 400 33 400 38 77 1 , 400 38 400 39 81 10 iterations 400 40 400 50 78 1 , 400 50 400 51 81 3 out 400 52 400 55 79 1 , 400 55 400 56 81 4 nout 400 57 400 61 80 1 ) 400 61 400 62 81 1 ; 400 62 400 63 18446744073709551615 1 } 401 1 401 2 18446744073709551615 0 0 82 0 0 0 8 0 0 1 3 0 10 write32_be 20 1 3 0 8 uint32_t 10 1 3 0 62 34:40:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 20 1 3 0 7 uint8_t 10 1 3 0 62 34:51:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 17 __builtin_bswap32 8 1 3 0 10 write64_be 20 1 3 0 8 uint64_t 10 1 3 0 62 46:40:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 62 46:51:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 17 __builtin_bswap64 8 1 3 0 6 md_pad 10 1 3 0 62 67:36:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 20 1 3 0 6 size_t 10 1 3 0 62 67:50:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 62 67:66:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 62 67:79:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 6 memset 8 1 3 0 12 sha1_extract 20 1 3 0 7 SHA_CTX 10 1 3 0 63 244:51:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 244:74:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 6 1 3 0 14 h0:SHAstate_st 6 1 3 0 14 h1:SHAstate_st 6 1 3 0 14 h2:SHAstate_st 6 1 3 0 14 h3:SHAstate_st 6 1 3 0 14 h4:SHAstate_st 8 1 3 0 8 sha1_cpy 10 1 3 0 63 253:47:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 253:76:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 8 sha1_xor 10 1 3 0 63 262:47:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 262:76:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 14 sha256_extract 20 1 3 0 10 SHA256_CTX 10 1 3 0 63 283:56:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 283:79:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 6 1 3 0 16 h:SHA256state_st 8 1 3 0 10 sha256_cpy 10 1 3 0 63 295:52:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 295:84:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 10 sha256_xor 10 1 3 0 63 307:52:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 307:84:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 14 sha512_extract 20 1 3 0 10 SHA512_CTX 10 1 3 0 63 331:56:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 331:79:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 6 1 3 0 16 h:SHA512state_st 8 1 3 0 10 sha512_cpy 10 1 3 0 63 343:52:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 343:84:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 10 sha512_xor 10 1 3 0 63 355:52:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 355:84:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 20 fastpbkdf2_hmac_sha1 10 1 3 0 63 379:42:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 379:53:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 380:42:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 380:55:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 381:36:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 382:36:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 382:48:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 11 pbkdf2_sha1 8 1 3 0 22 fastpbkdf2_hmac_sha256 10 1 3 0 63 387:44:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 387:55:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 388:44:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 388:57:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 389:38:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 390:38:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 390:50:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 13 pbkdf2_sha256 8 1 3 0 22 fastpbkdf2_hmac_sha512 10 1 3 0 63 395:44:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 395:55:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 396:44:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 396:57:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 397:38:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 398:38:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 10 1 3 0 63 398:50:/home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 8 1 3 0 13 pbkdf2_sha512 0 0 2 0 0 0 56 /home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.c 1509296147 56 /home/florenzi/Documenti/juci_ws/wpa_decode/fastpbkdf2.h 1509296147